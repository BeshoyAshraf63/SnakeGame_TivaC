Component: Arm Compiler for Embedded 6.18 Tool: armlink [5e4cc100]

==============================================================================

Section Cross References

    queue.o(.text.xQueueGenericReset) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericReset) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGenericReset) refers to list.o(.text.vListInitialise) for vListInitialise
    queue.o(.text.xQueueGenericReset) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueGenericReset) refers to queue.o(.text.xQueueGenericReset) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    queue.o(.text.xQueueGenericCreate) refers to queue.o(.text.prvInitialiseNewQueue) for prvInitialiseNewQueue
    queue.o(.ARM.exidx.text.xQueueGenericCreate) refers to queue.o(.text.xQueueGenericCreate) for [Anonymous Symbol]
    queue.o(.text.prvInitialiseNewQueue) refers to queue.o(.text.xQueueGenericReset) for xQueueGenericReset
    queue.o(.ARM.exidx.text.prvInitialiseNewQueue) refers to queue.o(.text.prvInitialiseNewQueue) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateMutex) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.text.xQueueCreateMutex) refers to queue.o(.text.prvInitialiseMutex) for prvInitialiseMutex
    queue.o(.ARM.exidx.text.xQueueCreateMutex) refers to queue.o(.text.xQueueCreateMutex) for [Anonymous Symbol]
    queue.o(.text.prvInitialiseMutex) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    queue.o(.ARM.exidx.text.prvInitialiseMutex) refers to queue.o(.text.prvInitialiseMutex) for [Anonymous Symbol]
    queue.o(.text.xQueueGiveMutexRecursive) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    queue.o(.text.xQueueGiveMutexRecursive) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    queue.o(.ARM.exidx.text.xQueueGiveMutexRecursive) refers to queue.o(.text.xQueueGiveMutexRecursive) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericSend) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueGenericSend) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvIsQueueFull) for prvIsQueueFull
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueGenericSend) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueGenericSend) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.ARM.exidx.text.xQueueGenericSend) refers to queue.o(.text.xQueueGenericSend) for [Anonymous Symbol]
    queue.o(.text.xQueueTakeMutexRecursive) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for xTaskGetCurrentTaskHandle
    queue.o(.text.xQueueTakeMutexRecursive) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    queue.o(.ARM.exidx.text.xQueueTakeMutexRecursive) refers to queue.o(.text.xQueueTakeMutexRecursive) for [Anonymous Symbol]
    queue.o(.text.xQueueSemaphoreTake) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.pvTaskIncrementMutexHeldCount) for pvTaskIncrementMutexHeldCount
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueSemaphoreTake) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskPriorityInherit) for xTaskPriorityInherit
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.text.xQueueSemaphoreTake) refers to queue.o(.text.prvGetDisinheritPriorityAfterTimeout) for prvGetDisinheritPriorityAfterTimeout
    queue.o(.text.xQueueSemaphoreTake) refers to tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) for vTaskPriorityDisinheritAfterTimeout
    queue.o(.ARM.exidx.text.xQueueSemaphoreTake) refers to queue.o(.text.xQueueSemaphoreTake) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateCountingSemaphore) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphore) refers to queue.o(.text.xQueueCreateCountingSemaphore) for [Anonymous Symbol]
    queue.o(.text.prvCopyDataToQueue) refers to tasks.o(.text.xTaskPriorityDisinherit) for xTaskPriorityDisinherit
    queue.o(.text.prvCopyDataToQueue) refers to memcpya.o(.text) for __aeabi_memcpy
    queue.o(.ARM.exidx.text.prvCopyDataToQueue) refers to queue.o(.text.prvCopyDataToQueue) for [Anonymous Symbol]
    queue.o(.text.prvNotifyQueueSetContainer) refers to queue.o(.text.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(.text.prvNotifyQueueSetContainer) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.prvNotifyQueueSetContainer) refers to queue.o(.text.prvNotifyQueueSetContainer) for [Anonymous Symbol]
    queue.o(.text.prvIsQueueFull) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvIsQueueFull) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvIsQueueFull) refers to queue.o(.text.prvIsQueueFull) for [Anonymous Symbol]
    queue.o(.text.prvUnlockQueue) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvUnlockQueue) refers to queue.o(.text.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(.text.prvUnlockQueue) refers to tasks.o(.text.vTaskMissedYield) for vTaskMissedYield
    queue.o(.text.prvUnlockQueue) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.prvUnlockQueue) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvUnlockQueue) refers to queue.o(.text.prvUnlockQueue) for [Anonymous Symbol]
    queue.o(.text.xQueueGenericSendFromISR) refers to queue.o(.text.prvCopyDataToQueue) for prvCopyDataToQueue
    queue.o(.text.xQueueGenericSendFromISR) refers to queue.o(.text.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(.text.xQueueGenericSendFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.xQueueGenericSendFromISR) refers to queue.o(.text.xQueueGenericSendFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueGiveFromISR) refers to queue.o(.text.prvNotifyQueueSetContainer) for prvNotifyQueueSetContainer
    queue.o(.text.xQueueGiveFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.xQueueGiveFromISR) refers to queue.o(.text.xQueueGiveFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueueReceive) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueueReceive) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueueReceive) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueueReceive) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.ARM.exidx.text.xQueueReceive) refers to queue.o(.text.xQueueReceive) for [Anonymous Symbol]
    queue.o(.text.prvCopyDataFromQueue) refers to memcpya.o(.text) for __aeabi_memcpy
    queue.o(.ARM.exidx.text.prvCopyDataFromQueue) refers to queue.o(.text.prvCopyDataFromQueue) for [Anonymous Symbol]
    queue.o(.text.prvIsQueueEmpty) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.prvIsQueueEmpty) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.prvIsQueueEmpty) refers to queue.o(.text.prvIsQueueEmpty) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.prvGetDisinheritPriorityAfterTimeout) refers to queue.o(.text.prvGetDisinheritPriorityAfterTimeout) for [Anonymous Symbol]
    queue.o(.text.xQueuePeek) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.text.xQueuePeek) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskCheckForTimeOut) for xTaskCheckForTimeOut
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvIsQueueEmpty) for prvIsQueueEmpty
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.vTaskPlaceOnEventList) for vTaskPlaceOnEventList
    queue.o(.text.xQueuePeek) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.text.xQueuePeek) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    queue.o(.ARM.exidx.text.xQueuePeek) refers to queue.o(.text.xQueuePeek) for [Anonymous Symbol]
    queue.o(.text.xQueueReceiveFromISR) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.text.xQueueReceiveFromISR) refers to tasks.o(.text.xTaskRemoveFromEventList) for xTaskRemoveFromEventList
    queue.o(.ARM.exidx.text.xQueueReceiveFromISR) refers to queue.o(.text.xQueueReceiveFromISR) for [Anonymous Symbol]
    queue.o(.text.xQueuePeekFromISR) refers to queue.o(.text.prvCopyDataFromQueue) for prvCopyDataFromQueue
    queue.o(.ARM.exidx.text.xQueuePeekFromISR) refers to queue.o(.text.xQueuePeekFromISR) for [Anonymous Symbol]
    queue.o(.text.uxQueueMessagesWaiting) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.uxQueueMessagesWaiting) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.uxQueueMessagesWaiting) refers to queue.o(.text.uxQueueMessagesWaiting) for [Anonymous Symbol]
    queue.o(.text.uxQueueSpacesAvailable) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.uxQueueSpacesAvailable) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.uxQueueSpacesAvailable) refers to queue.o(.text.uxQueueSpacesAvailable) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.uxQueueMessagesWaitingFromISR) refers to queue.o(.text.uxQueueMessagesWaitingFromISR) for [Anonymous Symbol]
    queue.o(.text.vQueueDelete) refers to heap_4.o(.text.vPortFree) for vPortFree
    queue.o(.ARM.exidx.text.vQueueDelete) refers to queue.o(.text.vQueueDelete) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueIsQueueEmptyFromISR) refers to queue.o(.text.xQueueIsQueueEmptyFromISR) for [Anonymous Symbol]
    queue.o(.ARM.exidx.text.xQueueIsQueueFullFromISR) refers to queue.o(.text.xQueueIsQueueFullFromISR) for [Anonymous Symbol]
    queue.o(.text.vQueueWaitForMessageRestricted) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.vQueueWaitForMessageRestricted) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.text.vQueueWaitForMessageRestricted) refers to tasks.o(.text.vTaskPlaceOnEventListRestricted) for vTaskPlaceOnEventListRestricted
    queue.o(.text.vQueueWaitForMessageRestricted) refers to queue.o(.text.prvUnlockQueue) for prvUnlockQueue
    queue.o(.ARM.exidx.text.vQueueWaitForMessageRestricted) refers to queue.o(.text.vQueueWaitForMessageRestricted) for [Anonymous Symbol]
    queue.o(.text.xQueueCreateSet) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    queue.o(.ARM.exidx.text.xQueueCreateSet) refers to queue.o(.text.xQueueCreateSet) for [Anonymous Symbol]
    queue.o(.text.xQueueAddToSet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueAddToSet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueAddToSet) refers to queue.o(.text.xQueueAddToSet) for [Anonymous Symbol]
    queue.o(.text.xQueueRemoveFromSet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    queue.o(.text.xQueueRemoveFromSet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    queue.o(.ARM.exidx.text.xQueueRemoveFromSet) refers to queue.o(.text.xQueueRemoveFromSet) for [Anonymous Symbol]
    queue.o(.text.xQueueSelectFromSet) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    queue.o(.ARM.exidx.text.xQueueSelectFromSet) refers to queue.o(.text.xQueueSelectFromSet) for [Anonymous Symbol]
    queue.o(.text.xQueueSelectFromSetFromISR) refers to queue.o(.text.xQueueReceiveFromISR) for xQueueReceiveFromISR
    queue.o(.ARM.exidx.text.xQueueSelectFromSetFromISR) refers to queue.o(.text.xQueueSelectFromSetFromISR) for [Anonymous Symbol]
    tasks.o(.text.xTaskCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    tasks.o(.text.xTaskCreate) refers to heap_4.o(.text.vPortFree) for vPortFree
    tasks.o(.text.xTaskCreate) refers to tasks.o(.text.prvInitialiseNewTask) for prvInitialiseNewTask
    tasks.o(.text.xTaskCreate) refers to tasks.o(.text.prvAddNewTaskToReadyList) for prvAddNewTaskToReadyList
    tasks.o(.ARM.exidx.text.xTaskCreate) refers to tasks.o(.text.xTaskCreate) for [Anonymous Symbol]
    tasks.o(.text.prvInitialiseNewTask) refers to list.o(.text.vListInitialiseItem) for vListInitialiseItem
    tasks.o(.text.prvInitialiseNewTask) refers to port.o(.text.pxPortInitialiseStack) for pxPortInitialiseStack
    tasks.o(.ARM.exidx.text.prvInitialiseNewTask) refers to tasks.o(.text.prvInitialiseNewTask) for [Anonymous Symbol]
    tasks.o(.text.prvAddNewTaskToReadyList) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.text.prvInitialiseTaskLists) for prvInitialiseTaskLists
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxTaskNumber) for uxTaskNumber
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.prvAddNewTaskToReadyList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvAddNewTaskToReadyList) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.prvAddNewTaskToReadyList) refers to tasks.o(.text.prvAddNewTaskToReadyList) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelete) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskDelete) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxTaskNumber) for uxTaskNumber
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.vTaskDelete) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxDeletedTasksWaitingCleanUp) for uxDeletedTasksWaitingCleanUp
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.vTaskDelete) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.vTaskDelete) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskDelete) refers to tasks.o(.text.prvDeleteTCB) for prvDeleteTCB
    tasks.o(.text.vTaskDelete) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.ARM.exidx.text.vTaskDelete) refers to tasks.o(.text.vTaskDelete) for [Anonymous Symbol]
    tasks.o(.text.prvResetNextTaskUnblockTime) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvResetNextTaskUnblockTime) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.ARM.exidx.text.prvResetNextTaskUnblockTime) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for [Anonymous Symbol]
    tasks.o(.text.prvDeleteTCB) refers to heap_4.o(.text.vPortFree) for vPortFree
    tasks.o(.ARM.exidx.text.prvDeleteTCB) refers to tasks.o(.text.prvDeleteTCB) for [Anonymous Symbol]
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.xTaskDelayUntil) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.xTaskDelayUntil) refers to tasks.o(.text.xTaskDelayUntil) for [Anonymous Symbol]
    tasks.o(.text.vTaskSuspendAll) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.ARM.exidx.text.vTaskSuspendAll) refers to tasks.o(.text.vTaskSuspendAll) for [Anonymous Symbol]
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to list.o(.text.vListInsert) for vListInsert
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.ARM.exidx.text.prvAddCurrentTaskToDelayedList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeAll) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.xTaskResumeAll) refers to tasks.o(.text.xTaskIncrementTick) for xTaskIncrementTick
    tasks.o(.text.xTaskResumeAll) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskResumeAll) refers to tasks.o(.text.xTaskResumeAll) for [Anonymous Symbol]
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.vTaskDelay) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.vTaskDelay) refers to tasks.o(.text.vTaskDelay) for [Anonymous Symbol]
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.eTaskGetState) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.eTaskGetState) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.eTaskGetState) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.ARM.exidx.text.eTaskGetState) refers to tasks.o(.text.eTaskGetState) for [Anonymous Symbol]
    tasks.o(.text.uxTaskPriorityGet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.uxTaskPriorityGet) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.uxTaskPriorityGet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.uxTaskPriorityGet) refers to tasks.o(.text.uxTaskPriorityGet) for [Anonymous Symbol]
    tasks.o(.text.uxTaskPriorityGetFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.uxTaskPriorityGetFromISR) refers to tasks.o(.text.uxTaskPriorityGetFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskPrioritySet) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskPrioritySet) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskPrioritySet) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskPrioritySet) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskPrioritySet) refers to tasks.o(.text.vTaskPrioritySet) for [Anonymous Symbol]
    tasks.o(.text.vTaskSuspend) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskSuspend) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.vTaskSuspend) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.text.vTaskSuspend) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.vTaskSuspend) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    tasks.o(.ARM.exidx.text.vTaskSuspend) refers to tasks.o(.text.vTaskSuspend) for [Anonymous Symbol]
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskSwitchContext) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.vTaskSwitchContext) refers to tasks.o(.text.vTaskSwitchContext) for [Anonymous Symbol]
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskResume) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskResume) refers to tasks.o(.text.prvTaskIsTaskSuspended) for prvTaskIsTaskSuspended
    tasks.o(.text.vTaskResume) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskResume) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskResume) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskResume) refers to tasks.o(.text.vTaskResume) for [Anonymous Symbol]
    tasks.o(.text.prvTaskIsTaskSuspended) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.prvTaskIsTaskSuspended) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.ARM.exidx.text.prvTaskIsTaskSuspended) refers to tasks.o(.text.prvTaskIsTaskSuspended) for [Anonymous Symbol]
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.text.prvTaskIsTaskSuspended) for prvTaskIsTaskSuspended
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.xTaskResumeFromISR) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskResumeFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskResumeFromISR) refers to list.o(.text.vListInsertEnd) for vListInsertEnd
    tasks.o(.ARM.exidx.text.xTaskResumeFromISR) refers to tasks.o(.text.xTaskResumeFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xIdleTaskHandle) for xIdleTaskHandle
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.text.prvIdleTask) for prvIdleTask
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.rodata.str1.1) for .L.str
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    tasks.o(.text.vTaskStartScheduler) refers to timers.o(.text.xTimerCreateTimerTask) for xTimerCreateTimerTask
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskStartScheduler) refers to port.o(.text.xPortStartScheduler) for xPortStartScheduler
    tasks.o(.text.vTaskStartScheduler) refers to tasks.o(.rodata.uxTopUsedPriority) for uxTopUsedPriority
    tasks.o(.ARM.exidx.text.vTaskStartScheduler) refers to tasks.o(.text.vTaskStartScheduler) for [Anonymous Symbol]
    tasks.o(.text.prvIdleTask) refers to tasks.o(.text.prvCheckTasksWaitingTermination) for prvCheckTasksWaitingTermination
    tasks.o(.text.prvIdleTask) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.ARM.exidx.text.prvIdleTask) refers to tasks.o(.text.prvIdleTask) for [Anonymous Symbol]
    tasks.o(.text.vTaskEndScheduler) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.vTaskEndScheduler) refers to port.o(.text.vPortEndScheduler) for vPortEndScheduler
    tasks.o(.ARM.exidx.text.vTaskEndScheduler) refers to tasks.o(.text.vTaskEndScheduler) for [Anonymous Symbol]
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.text.prvResetNextTaskUnblockTime) for prvResetNextTaskUnblockTime
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xNextTaskUnblockTime) for xNextTaskUnblockTime
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.text.xTaskIncrementTick) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.ARM.exidx.text.xTaskIncrementTick) refers to tasks.o(.text.xTaskIncrementTick) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetTickCount) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.xTaskGetTickCount) refers to tasks.o(.text.xTaskGetTickCount) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetTickCountFromISR) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.xTaskGetTickCountFromISR) refers to tasks.o(.text.xTaskGetTickCountFromISR) for [Anonymous Symbol]
    tasks.o(.text.uxTaskGetNumberOfTasks) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.ARM.exidx.text.uxTaskGetNumberOfTasks) refers to tasks.o(.text.uxTaskGetNumberOfTasks) for [Anonymous Symbol]
    tasks.o(.text.pcTaskGetName) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.pcTaskGetName) refers to tasks.o(.text.pcTaskGetName) for [Anonymous Symbol]
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.bss.xPendedTicks) for xPendedTicks
    tasks.o(.text.xTaskCatchUpTicks) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    tasks.o(.ARM.exidx.text.xTaskCatchUpTicks) refers to tasks.o(.text.xTaskCatchUpTicks) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnEventList) refers to list.o(.text.vListInsert) for vListInsert
    tasks.o(.text.vTaskPlaceOnEventList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnEventList) refers to tasks.o(.text.vTaskPlaceOnEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnUnorderedEventList) refers to tasks.o(.text.vTaskPlaceOnUnorderedEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.ARM.exidx.text.vTaskPlaceOnEventListRestricted) refers to tasks.o(.text.vTaskPlaceOnEventListRestricted) for [Anonymous Symbol]
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskRemoveFromEventList) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.xTaskRemoveFromEventList) refers to tasks.o(.text.xTaskRemoveFromEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskRemoveFromUnorderedEventList) refers to tasks.o(.text.vTaskRemoveFromUnorderedEventList) for [Anonymous Symbol]
    tasks.o(.text.vTaskSetTimeOutState) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.vTaskSetTimeOutState) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.vTaskSetTimeOutState) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.vTaskSetTimeOutState) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.vTaskSetTimeOutState) refers to tasks.o(.text.vTaskSetTimeOutState) for [Anonymous Symbol]
    tasks.o(.text.vTaskInternalSetTimeOutState) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.vTaskInternalSetTimeOutState) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.ARM.exidx.text.vTaskInternalSetTimeOutState) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for [Anonymous Symbol]
    tasks.o(.text.xTaskCheckForTimeOut) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.bss.xTickCount) for xTickCount
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.bss.xNumOfOverflows) for xNumOfOverflows
    tasks.o(.text.xTaskCheckForTimeOut) refers to tasks.o(.text.vTaskInternalSetTimeOutState) for vTaskInternalSetTimeOutState
    tasks.o(.text.xTaskCheckForTimeOut) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskCheckForTimeOut) refers to tasks.o(.text.xTaskCheckForTimeOut) for [Anonymous Symbol]
    tasks.o(.text.vTaskMissedYield) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskMissedYield) refers to tasks.o(.text.vTaskMissedYield) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetCurrentTaskHandle) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.xTaskGetCurrentTaskHandle) refers to tasks.o(.text.xTaskGetCurrentTaskHandle) for [Anonymous Symbol]
    tasks.o(.text.xTaskGetSchedulerState) refers to tasks.o(.bss.xSchedulerRunning) for xSchedulerRunning
    tasks.o(.text.xTaskGetSchedulerState) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.ARM.exidx.text.xTaskGetSchedulerState) refers to tasks.o(.text.xTaskGetSchedulerState) for [Anonymous Symbol]
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskPriorityInherit) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskPriorityInherit) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.ARM.exidx.text.xTaskPriorityInherit) refers to tasks.o(.text.xTaskPriorityInherit) for [Anonymous Symbol]
    tasks.o(.text.xTaskPriorityDisinherit) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskPriorityDisinherit) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.ARM.exidx.text.xTaskPriorityDisinherit) refers to tasks.o(.text.xTaskPriorityDisinherit) for [Anonymous Symbol]
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.ARM.exidx.text.vTaskPriorityDisinheritAfterTimeout) refers to tasks.o(.text.vTaskPriorityDisinheritAfterTimeout) for [Anonymous Symbol]
    tasks.o(.text.uxTaskResetEventItemValue) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.uxTaskResetEventItemValue) refers to tasks.o(.text.uxTaskResetEventItemValue) for [Anonymous Symbol]
    tasks.o(.text.pvTaskIncrementMutexHeldCount) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.ARM.exidx.text.pvTaskIncrementMutexHeldCount) refers to tasks.o(.text.pvTaskIncrementMutexHeldCount) for [Anonymous Symbol]
    tasks.o(.text.ulTaskGenericNotifyTake) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.ulTaskGenericNotifyTake) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.ulTaskGenericNotifyTake) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.ulTaskGenericNotifyTake) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.ulTaskGenericNotifyTake) refers to tasks.o(.text.ulTaskGenericNotifyTake) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyWait) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotifyWait) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyWait) refers to tasks.o(.text.prvAddCurrentTaskToDelayedList) for prvAddCurrentTaskToDelayedList
    tasks.o(.text.xTaskGenericNotifyWait) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyWait) refers to tasks.o(.text.xTaskGenericNotifyWait) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotify) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskGenericNotify) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotify) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskGenericNotify) refers to tasks.o(.text.xTaskGenericNotify) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyFromISR) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyFromISR) refers to tasks.o(.text.xTaskGenericNotifyFromISR) for [Anonymous Symbol]
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.uxSchedulerSuspended) for uxSchedulerSuspended
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.uxTopReadyPriority) for uxTopReadyPriority
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.bss.xYieldPending) for xYieldPending
    tasks.o(.ARM.exidx.text.vTaskGenericNotifyGiveFromISR) refers to tasks.o(.text.vTaskGenericNotifyGiveFromISR) for [Anonymous Symbol]
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.xTaskGenericNotifyStateClear) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.xTaskGenericNotifyStateClear) refers to tasks.o(.text.xTaskGenericNotifyStateClear) for [Anonymous Symbol]
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.ulTaskGenericNotifyValueClear) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.ARM.exidx.text.ulTaskGenericNotifyValueClear) refers to tasks.o(.text.ulTaskGenericNotifyValueClear) for [Anonymous Symbol]
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxReadyTasksLists) for pxReadyTasksLists
    tasks.o(.text.prvInitialiseTaskLists) refers to list.o(.text.vListInitialise) for vListInitialise
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xDelayedTaskList1) for xDelayedTaskList1
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xDelayedTaskList2) for xDelayedTaskList2
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xPendingReadyList) for xPendingReadyList
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.xSuspendedTaskList) for xSuspendedTaskList
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxDelayedTaskList) for pxDelayedTaskList
    tasks.o(.text.prvInitialiseTaskLists) refers to tasks.o(.bss.pxOverflowDelayedTaskList) for pxOverflowDelayedTaskList
    tasks.o(.ARM.exidx.text.prvInitialiseTaskLists) refers to tasks.o(.text.prvInitialiseTaskLists) for [Anonymous Symbol]
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.uxDeletedTasksWaitingCleanUp) for uxDeletedTasksWaitingCleanUp
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.xTasksWaitingTermination) for xTasksWaitingTermination
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to list.o(.text.uxListRemove) for uxListRemove
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.bss.uxCurrentNumberOfTasks) for uxCurrentNumberOfTasks
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    tasks.o(.text.prvCheckTasksWaitingTermination) refers to tasks.o(.text.prvDeleteTCB) for prvDeleteTCB
    tasks.o(.ARM.exidx.text.prvCheckTasksWaitingTermination) refers to tasks.o(.text.prvCheckTasksWaitingTermination) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInitialise) refers to list.o(.text.vListInitialise) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInitialiseItem) refers to list.o(.text.vListInitialiseItem) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInsertEnd) refers to list.o(.text.vListInsertEnd) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.vListInsert) refers to list.o(.text.vListInsert) for [Anonymous Symbol]
    list.o(.ARM.exidx.text.uxListRemove) refers to list.o(.text.uxListRemove) for [Anonymous Symbol]
    port.o(.text.pxPortInitialiseStack) refers to port.o(.text.prvTaskExitError) for prvTaskExitError
    port.o(.ARM.exidx.text.pxPortInitialiseStack) refers to port.o(.text.pxPortInitialiseStack) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.prvTaskExitError) refers to port.o(.text.prvTaskExitError) for [Anonymous Symbol]
    port.o(.text.SVC_Handler) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    port.o(.ARM.exidx.text.SVC_Handler) refers to port.o(.text.SVC_Handler) for [Anonymous Symbol]
    port.o(.text.xPortStartScheduler) refers to port.o(.text.vPortSetupTimerInterrupt) for vPortSetupTimerInterrupt
    port.o(.text.xPortStartScheduler) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.text.xPortStartScheduler) refers to port.o(.text.vPortEnableVFP) for vPortEnableVFP
    port.o(.text.xPortStartScheduler) refers to port.o(.text.prvPortStartFirstTask) for prvPortStartFirstTask
    port.o(.text.xPortStartScheduler) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    port.o(.text.xPortStartScheduler) refers to port.o(.text.prvTaskExitError) for prvTaskExitError
    port.o(.ARM.exidx.text.xPortStartScheduler) refers to port.o(.text.xPortStartScheduler) for [Anonymous Symbol]
    port.o(.text.vPortSetupTimerInterrupt) refers to system_tm4c123.o(.data.SystemCoreClock) for SystemCoreClock
    port.o(.ARM.exidx.text.vPortSetupTimerInterrupt) refers to port.o(.text.vPortSetupTimerInterrupt) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.vPortEnableVFP) refers to port.o(.text.vPortEnableVFP) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.prvPortStartFirstTask) refers to port.o(.text.prvPortStartFirstTask) for [Anonymous Symbol]
    port.o(.ARM.exidx.text.vPortEndScheduler) refers to port.o(.text.vPortEndScheduler) for [Anonymous Symbol]
    port.o(.text.vPortEnterCritical) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortEnterCritical) refers to port.o(.text.vPortEnterCritical) for [Anonymous Symbol]
    port.o(.text.vPortExitCritical) refers to port.o(.data.uxCriticalNesting) for uxCriticalNesting
    port.o(.ARM.exidx.text.vPortExitCritical) refers to port.o(.text.vPortExitCritical) for [Anonymous Symbol]
    port.o(.text.PendSV_Handler) refers to tasks.o(.text.vTaskSwitchContext) for vTaskSwitchContext
    port.o(.text.PendSV_Handler) refers to tasks.o(.bss.pxCurrentTCB) for pxCurrentTCB
    port.o(.ARM.exidx.text.PendSV_Handler) refers to port.o(.text.PendSV_Handler) for [Anonymous Symbol]
    port.o(.text.SysTick_Handler) refers to tasks.o(.text.xTaskIncrementTick) for xTaskIncrementTick
    port.o(.ARM.exidx.text.SysTick_Handler) refers to port.o(.text.SysTick_Handler) for [Anonymous Symbol]
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.text.prvCheckForValidListAndQueue) for prvCheckForValidListAndQueue
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.bss.xTimerTaskHandle) for xTimerTaskHandle
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.text.prvTimerTask) for prvTimerTask
    timers.o(.text.xTimerCreateTimerTask) refers to timers.o(.rodata.str1.1) for .L.str
    timers.o(.text.xTimerCreateTimerTask) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    timers.o(.ARM.exidx.text.xTimerCreateTimerTask) refers to timers.o(.text.xTimerCreateTimerTask) for [Anonymous Symbol]
    timers.o(.text.prvCheckForValidListAndQueue) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.xActiveTimerList1) for xActiveTimerList1
    timers.o(.text.prvCheckForValidListAndQueue) refers to list.o(.text.vListInitialise) for vListInitialise
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.xActiveTimerList2) for xActiveTimerList2
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.prvCheckForValidListAndQueue) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.text.prvCheckForValidListAndQueue) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    timers.o(.text.prvCheckForValidListAndQueue) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.prvCheckForValidListAndQueue) refers to timers.o(.text.prvCheckForValidListAndQueue) for [Anonymous Symbol]
    timers.o(.text.prvTimerTask) refers to timers.o(.text.prvGetNextExpireTime) for prvGetNextExpireTime
    timers.o(.text.prvTimerTask) refers to timers.o(.text.prvProcessTimerOrBlockTask) for prvProcessTimerOrBlockTask
    timers.o(.text.prvTimerTask) refers to timers.o(.text.prvProcessReceivedCommands) for prvProcessReceivedCommands
    timers.o(.ARM.exidx.text.prvTimerTask) refers to timers.o(.text.prvTimerTask) for [Anonymous Symbol]
    timers.o(.text.xTimerCreate) refers to heap_4.o(.text.pvPortMalloc) for pvPortMalloc
    timers.o(.text.xTimerCreate) refers to timers.o(.text.prvInitialiseNewTimer) for prvInitialiseNewTimer
    timers.o(.ARM.exidx.text.xTimerCreate) refers to timers.o(.text.xTimerCreate) for [Anonymous Symbol]
    timers.o(.text.prvInitialiseNewTimer) refers to timers.o(.text.prvCheckForValidListAndQueue) for prvCheckForValidListAndQueue
    timers.o(.text.prvInitialiseNewTimer) refers to list.o(.text.vListInitialiseItem) for vListInitialiseItem
    timers.o(.ARM.exidx.text.prvInitialiseNewTimer) refers to timers.o(.text.prvInitialiseNewTimer) for [Anonymous Symbol]
    timers.o(.text.xTimerGenericCommand) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.xTimerGenericCommand) refers to tasks.o(.text.xTaskGetSchedulerState) for xTaskGetSchedulerState
    timers.o(.text.xTimerGenericCommand) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    timers.o(.text.xTimerGenericCommand) refers to queue.o(.text.xQueueGenericSendFromISR) for xQueueGenericSendFromISR
    timers.o(.ARM.exidx.text.xTimerGenericCommand) refers to timers.o(.text.xTimerGenericCommand) for [Anonymous Symbol]
    timers.o(.text.xTimerGetTimerDaemonTaskHandle) refers to timers.o(.bss.xTimerTaskHandle) for xTimerTaskHandle
    timers.o(.ARM.exidx.text.xTimerGetTimerDaemonTaskHandle) refers to timers.o(.text.xTimerGetTimerDaemonTaskHandle) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.xTimerGetPeriod) refers to timers.o(.text.xTimerGetPeriod) for [Anonymous Symbol]
    timers.o(.text.vTimerSetReloadMode) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.vTimerSetReloadMode) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.vTimerSetReloadMode) refers to timers.o(.text.vTimerSetReloadMode) for [Anonymous Symbol]
    timers.o(.text.uxTimerGetReloadMode) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.uxTimerGetReloadMode) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.uxTimerGetReloadMode) refers to timers.o(.text.uxTimerGetReloadMode) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.xTimerGetExpiryTime) refers to timers.o(.text.xTimerGetExpiryTime) for [Anonymous Symbol]
    timers.o(.ARM.exidx.text.pcTimerGetName) refers to timers.o(.text.pcTimerGetName) for [Anonymous Symbol]
    timers.o(.text.xTimerIsTimerActive) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.xTimerIsTimerActive) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.xTimerIsTimerActive) refers to timers.o(.text.xTimerIsTimerActive) for [Anonymous Symbol]
    timers.o(.text.pvTimerGetTimerID) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.pvTimerGetTimerID) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.pvTimerGetTimerID) refers to timers.o(.text.pvTimerGetTimerID) for [Anonymous Symbol]
    timers.o(.text.vTimerSetTimerID) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    timers.o(.text.vTimerSetTimerID) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    timers.o(.ARM.exidx.text.vTimerSetTimerID) refers to timers.o(.text.vTimerSetTimerID) for [Anonymous Symbol]
    timers.o(.text.prvGetNextExpireTime) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.ARM.exidx.text.prvGetNextExpireTime) refers to timers.o(.text.prvGetNextExpireTime) for [Anonymous Symbol]
    timers.o(.text.prvProcessTimerOrBlockTask) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.text.prvSampleTimeNow) for prvSampleTimeNow
    timers.o(.text.prvProcessTimerOrBlockTask) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.text.prvProcessExpiredTimer) for prvProcessExpiredTimer
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.text.prvProcessTimerOrBlockTask) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.prvProcessTimerOrBlockTask) refers to queue.o(.text.vQueueWaitForMessageRestricted) for vQueueWaitForMessageRestricted
    timers.o(.ARM.exidx.text.prvProcessTimerOrBlockTask) refers to timers.o(.text.prvProcessTimerOrBlockTask) for [Anonymous Symbol]
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.bss.xTimerQueue) for xTimerQueue
    timers.o(.text.prvProcessReceivedCommands) refers to queue.o(.text.xQueueReceive) for xQueueReceive
    timers.o(.text.prvProcessReceivedCommands) refers to list.o(.text.uxListRemove) for uxListRemove
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.text.prvSampleTimeNow) for prvSampleTimeNow
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.text.prvInsertTimerInActiveList) for prvInsertTimerInActiveList
    timers.o(.text.prvProcessReceivedCommands) refers to timers.o(.text.prvReloadTimer) for prvReloadTimer
    timers.o(.text.prvProcessReceivedCommands) refers to heap_4.o(.text.vPortFree) for vPortFree
    timers.o(.ARM.exidx.text.prvProcessReceivedCommands) refers to timers.o(.text.prvProcessReceivedCommands) for [Anonymous Symbol]
    timers.o(.text.prvSampleTimeNow) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    timers.o(.text.prvSampleTimeNow) refers to timers.o(.bss.prvSampleTimeNow.xLastTime) for prvSampleTimeNow.xLastTime
    timers.o(.text.prvSampleTimeNow) refers to timers.o(.text.prvSwitchTimerLists) for prvSwitchTimerLists
    timers.o(.ARM.exidx.text.prvSampleTimeNow) refers to timers.o(.text.prvSampleTimeNow) for [Anonymous Symbol]
    timers.o(.text.prvProcessExpiredTimer) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.prvProcessExpiredTimer) refers to list.o(.text.uxListRemove) for uxListRemove
    timers.o(.text.prvProcessExpiredTimer) refers to timers.o(.text.prvReloadTimer) for prvReloadTimer
    timers.o(.ARM.exidx.text.prvProcessExpiredTimer) refers to timers.o(.text.prvProcessExpiredTimer) for [Anonymous Symbol]
    timers.o(.text.prvSwitchTimerLists) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.text.prvSwitchTimerLists) refers to timers.o(.text.prvProcessExpiredTimer) for prvProcessExpiredTimer
    timers.o(.text.prvSwitchTimerLists) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.ARM.exidx.text.prvSwitchTimerLists) refers to timers.o(.text.prvSwitchTimerLists) for [Anonymous Symbol]
    timers.o(.text.prvReloadTimer) refers to timers.o(.text.prvInsertTimerInActiveList) for prvInsertTimerInActiveList
    timers.o(.ARM.exidx.text.prvReloadTimer) refers to timers.o(.text.prvReloadTimer) for [Anonymous Symbol]
    timers.o(.text.prvInsertTimerInActiveList) refers to timers.o(.bss.pxOverflowTimerList) for pxOverflowTimerList
    timers.o(.text.prvInsertTimerInActiveList) refers to list.o(.text.vListInsert) for vListInsert
    timers.o(.text.prvInsertTimerInActiveList) refers to timers.o(.bss.pxCurrentTimerList) for pxCurrentTimerList
    timers.o(.ARM.exidx.text.prvInsertTimerInActiveList) refers to timers.o(.text.prvInsertTimerInActiveList) for [Anonymous Symbol]
    heap_4.o(.text.pvPortMalloc) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.pxEnd) for pxEnd
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.text.prvHeapInit) for prvHeapInit
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xBlockAllocatedBit) for xBlockAllocatedBit
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xStart) for xStart
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.text.prvInsertBlockIntoFreeList) for prvInsertBlockIntoFreeList
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for xMinimumEverFreeBytesRemaining
    heap_4.o(.text.pvPortMalloc) refers to heap_4.o(.bss.xNumberOfSuccessfulAllocations) for xNumberOfSuccessfulAllocations
    heap_4.o(.text.pvPortMalloc) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_4.o(.ARM.exidx.text.pvPortMalloc) refers to heap_4.o(.text.pvPortMalloc) for [Anonymous Symbol]
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.ucHeap) for ucHeap
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.xStart) for xStart
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.pxEnd) for pxEnd
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for xMinimumEverFreeBytesRemaining
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.text.prvHeapInit) refers to heap_4.o(.bss.xBlockAllocatedBit) for xBlockAllocatedBit
    heap_4.o(.ARM.exidx.text.prvHeapInit) refers to heap_4.o(.text.prvHeapInit) for [Anonymous Symbol]
    heap_4.o(.text.prvInsertBlockIntoFreeList) refers to heap_4.o(.bss.xStart) for xStart
    heap_4.o(.text.prvInsertBlockIntoFreeList) refers to heap_4.o(.bss.pxEnd) for pxEnd
    heap_4.o(.ARM.exidx.text.prvInsertBlockIntoFreeList) refers to heap_4.o(.text.prvInsertBlockIntoFreeList) for [Anonymous Symbol]
    heap_4.o(.text.vPortFree) refers to heap_4.o(.bss.xBlockAllocatedBit) for xBlockAllocatedBit
    heap_4.o(.text.vPortFree) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_4.o(.text.vPortFree) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.text.vPortFree) refers to heap_4.o(.text.prvInsertBlockIntoFreeList) for prvInsertBlockIntoFreeList
    heap_4.o(.text.vPortFree) refers to heap_4.o(.bss.xNumberOfSuccessfulFrees) for xNumberOfSuccessfulFrees
    heap_4.o(.text.vPortFree) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_4.o(.ARM.exidx.text.vPortFree) refers to heap_4.o(.text.vPortFree) for [Anonymous Symbol]
    heap_4.o(.text.xPortGetFreeHeapSize) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.ARM.exidx.text.xPortGetFreeHeapSize) refers to heap_4.o(.text.xPortGetFreeHeapSize) for [Anonymous Symbol]
    heap_4.o(.text.xPortGetMinimumEverFreeHeapSize) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for xMinimumEverFreeBytesRemaining
    heap_4.o(.ARM.exidx.text.xPortGetMinimumEverFreeHeapSize) refers to heap_4.o(.text.xPortGetMinimumEverFreeHeapSize) for [Anonymous Symbol]
    heap_4.o(.ARM.exidx.text.vPortInitialiseBlocks) refers to heap_4.o(.text.vPortInitialiseBlocks) for [Anonymous Symbol]
    heap_4.o(.text.vPortGetHeapStats) refers to tasks.o(.text.vTaskSuspendAll) for vTaskSuspendAll
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xStart) for xStart
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.pxEnd) for pxEnd
    heap_4.o(.text.vPortGetHeapStats) refers to tasks.o(.text.xTaskResumeAll) for xTaskResumeAll
    heap_4.o(.text.vPortGetHeapStats) refers to port.o(.text.vPortEnterCritical) for vPortEnterCritical
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xFreeBytesRemaining) for xFreeBytesRemaining
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xNumberOfSuccessfulAllocations) for xNumberOfSuccessfulAllocations
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xNumberOfSuccessfulFrees) for xNumberOfSuccessfulFrees
    heap_4.o(.text.vPortGetHeapStats) refers to heap_4.o(.bss.xMinimumEverFreeBytesRemaining) for xMinimumEverFreeBytesRemaining
    heap_4.o(.text.vPortGetHeapStats) refers to port.o(.text.vPortExitCritical) for vPortExitCritical
    heap_4.o(.ARM.exidx.text.vPortGetHeapStats) refers to heap_4.o(.text.vPortGetHeapStats) for [Anonymous Symbol]
    main.o(.text.main) refers to system_tm4c123.o(.data.SystemCoreClock) for SystemCoreClock
    main.o(.text.main) refers to uart.o(.text.UART0_init) for UART0_init
    main.o(.text.main) refers to game.o(.text.gameInit) for gameInit
    main.o(.text.main) refers to gametasks.o(.text.Task_GamePrint) for Task_GamePrint
    main.o(.text.main) refers to main.o(.rodata.str1.1) for .L.str
    main.o(.text.main) refers to tasks.o(.text.xTaskCreate) for xTaskCreate
    main.o(.text.main) refers to gametasks.o(.text.Task_GameUpdate) for Task_GameUpdate
    main.o(.text.main) refers to gametasks.o(.text.Task_UpdateTime) for Task_UpdateTime
    main.o(.text.main) refers to gametasks.o(.text.UART0_HandlerTask) for UART0_HandlerTask
    main.o(.text.main) refers to tasks.o(.text.vTaskStartScheduler) for vTaskStartScheduler
    main.o(.ARM.exidx.text.main) refers to main.o(.text.main) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.vApplicationMallocFailedHook) refers to main.o(.text.vApplicationMallocFailedHook) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.vApplicationStackOverflowHook) refers to main.o(.text.vApplicationStackOverflowHook) for [Anonymous Symbol]
    main.o(.ARM.exidx.text.vApplicationIdleHook) refers to main.o(.text.vApplicationIdleHook) for [Anonymous Symbol]
    game.o(.text.gameInit) refers to queue.o(.text.xQueueGenericCreate) for xQueueGenericCreate
    game.o(.text.gameInit) refers to game.o(.bss.UART0_BinarySemaphore) for UART0_BinarySemaphore
    game.o(.text.gameInit) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    game.o(.text.gameInit) refers to game.o(.bss.shouldPrint_BinarySemaphore) for shouldPrint_BinarySemaphore
    game.o(.text.gameInit) refers to game.o(.bss.shouldUpdate_BinarySemaphore) for shouldUpdate_BinarySemaphore
    game.o(.text.gameInit) refers to queue.o(.text.xQueueCreateMutex) for xQueueCreateMutex
    game.o(.text.gameInit) refers to game.o(.bss.gameData_Mutex) for gameData_Mutex
    game.o(.text.gameInit) refers to game.o(.text.beginGame) for beginGame
    game.o(.text.gameInit) refers to game.o(.bss.initialGame) for initialGame
    game.o(.text.gameInit) refers to game.o(.bss.score) for score
    game.o(.text.gameInit) refers to game.o(.bss.isPlaying) for isPlaying
    game.o(.text.gameInit) refers to game.o(.bss.level) for level
    game.o(.ARM.exidx.text.gameInit) refers to game.o(.text.gameInit) for [Anonymous Symbol]
    game.o(.text.beginGame) refers to game.o(.bss.board) for board
    game.o(.text.beginGame) refers to game.o(.bss.initialGame) for initialGame
    game.o(.text.beginGame) refers to game.o(.bss.timeElapsed) for timeElapsed
    game.o(.text.beginGame) refers to game.o(.bss.win) for win
    game.o(.text.beginGame) refers to game.o(.bss.currentCmd) for currentCmd
    game.o(.text.beginGame) refers to game.o(.bss.prevCmd) for prevCmd
    game.o(.text.beginGame) refers to game.o(.bss.headX) for headX
    game.o(.text.beginGame) refers to game.o(.bss.headY) for headY
    game.o(.text.beginGame) refers to game.o(.bss.headIndex) for headIndex
    game.o(.text.beginGame) refers to game.o(.bss.tailIndex) for tailIndex
    game.o(.text.beginGame) refers to game.o(.bss.powerUp) for powerUp
    game.o(.ARM.exidx.text.beginGame) refers to game.o(.text.beginGame) for [Anonymous Symbol]
    game.o(.text.gamePrint) refers to game.o(.bss.gameData_Mutex) for gameData_Mutex
    game.o(.text.gamePrint) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    game.o(.text.gamePrint) refers to game.o(.bss.isPlaying) for isPlaying
    game.o(.text.gamePrint) refers to game.o(.bss.score) for score
    game.o(.text.gamePrint) refers to game.o(.bss.timeElapsed) for timeElapsed
    game.o(.text.gamePrint) refers to game.o(.bss.level) for level
    game.o(.text.gamePrint) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    game.o(.text.gamePrint) refers to game.o(.rodata.str1.1) for .L.str
    game.o(.text.gamePrint) refers to uart.o(.text.UART0_Print) for UART0_Print
    game.o(.text.gamePrint) refers to game.o(.bss.initialGame) for initialGame
    game.o(.text.gamePrint) refers to game.o(.bss.win) for win
    game.o(.text.gamePrint) refers to uart.o(.text.UART0_PrintDecimal) for UART0_PrintDecimal
    game.o(.text.gamePrint) refers to game.o(.bss.shouldPrint_BinarySemaphore) for shouldPrint_BinarySemaphore
    game.o(.text.gamePrint) refers to uart.o(.text.UART0_SendChar) for UART0_SendChar
    game.o(.text.gamePrint) refers to game.o(.bss.board) for board
    game.o(.text.gamePrint) refers to game.o(.bss.headIndex) for headIndex
    game.o(.ARM.exidx.text.gamePrint) refers to game.o(.text.gamePrint) for [Anonymous Symbol]
    game.o(.text.gameUpdate) refers to game.o(.bss.gameData_Mutex) for gameData_Mutex
    game.o(.text.gameUpdate) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    game.o(.text.gameUpdate) refers to game.o(.bss.isPlaying) for isPlaying
    game.o(.text.gameUpdate) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    game.o(.text.gameUpdate) refers to game.o(.bss.shouldUpdate_BinarySemaphore) for shouldUpdate_BinarySemaphore
    game.o(.text.gameUpdate) refers to game.o(.bss.powerUp) for powerUp
    game.o(.text.gameUpdate) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    game.o(.text.gameUpdate) refers to rand.o(.text) for srand
    game.o(.text.gameUpdate) refers to game.o(.bss.board) for board
    game.o(.text.gameUpdate) refers to game.o(.bss.currentCmd) for currentCmd
    game.o(.text.gameUpdate) refers to game.o(.bss.prevCmd) for prevCmd
    game.o(.text.gameUpdate) refers to game.o(.text.absolute) for absolute
    game.o(.text.gameUpdate) refers to game.o(.bss.headX) for headX
    game.o(.text.gameUpdate) refers to game.o(.text.loseGame) for loseGame
    game.o(.text.gameUpdate) refers to game.o(.bss.headY) for headY
    game.o(.text.gameUpdate) refers to game.o(.bss.score) for score
    game.o(.text.gameUpdate) refers to game.o(.bss.tailIndex) for tailIndex
    game.o(.text.gameUpdate) refers to game.o(.bss.headIndex) for headIndex
    game.o(.text.gameUpdate) refers to game.o(.text.winGame) for winGame
    game.o(.ARM.exidx.text.gameUpdate) refers to game.o(.text.gameUpdate) for [Anonymous Symbol]
    game.o(.ARM.exidx.text.absolute) refers to game.o(.text.absolute) for [Anonymous Symbol]
    game.o(.text.loseGame) refers to game.o(.bss.win) for win
    game.o(.text.loseGame) refers to game.o(.bss.isPlaying) for isPlaying
    game.o(.text.loseGame) refers to game.o(.bss.level) for level
    game.o(.text.loseGame) refers to game.o(.bss.score) for score
    game.o(.ARM.exidx.text.loseGame) refers to game.o(.text.loseGame) for [Anonymous Symbol]
    game.o(.text.winGame) refers to game.o(.bss.win) for win
    game.o(.text.winGame) refers to game.o(.bss.isPlaying) for isPlaying
    game.o(.text.winGame) refers to game.o(.bss.level) for level
    game.o(.ARM.exidx.text.winGame) refers to game.o(.text.winGame) for [Anonymous Symbol]
    uart.o(.text.UART0_init) refers to dfltui.o(.text) for __aeabi_ui2d
    uart.o(.text.UART0_init) refers to dfixui.o(.text) for __aeabi_d2uiz
    uart.o(.text.UART0_init) refers to dadd.o(.text) for __aeabi_dsub
    uart.o(.text.UART0_init) refers to dmul.o(.text) for __aeabi_dmul
    uart.o(.text.UART0_init) refers to uart.o(.text.__NVIC_SetPriority) for __NVIC_SetPriority
    uart.o(.text.UART0_init) refers to uart.o(.text.__NVIC_EnableIRQ) for __NVIC_EnableIRQ
    uart.o(.ARM.exidx.text.UART0_init) refers to uart.o(.text.UART0_init) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.__NVIC_SetPriority) refers to uart.o(.text.__NVIC_SetPriority) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.__NVIC_EnableIRQ) refers to uart.o(.text.__NVIC_EnableIRQ) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.UART0_SendChar) refers to uart.o(.text.UART0_SendChar) for [Anonymous Symbol]
    uart.o(.text.UART0_Print) refers to uart.o(.text.UART0_SendChar) for UART0_SendChar
    uart.o(.ARM.exidx.text.UART0_Print) refers to uart.o(.text.UART0_Print) for [Anonymous Symbol]
    uart.o(.text.UART0_PrintDecimal) refers to uart.o(.text.UART0_SendChar) for UART0_SendChar
    uart.o(.text.UART0_PrintDecimal) refers to ldiv.o(.text) for __aeabi_ldivmod
    uart.o(.ARM.exidx.text.UART0_PrintDecimal) refers to uart.o(.text.UART0_PrintDecimal) for [Anonymous Symbol]
    uart.o(.ARM.exidx.text.UART0_GetReceivedChar) refers to uart.o(.text.UART0_GetReceivedChar) for [Anonymous Symbol]
    gametasks.o(.text.UART0_HandlerTask) refers to game.o(.bss.UART0_BinarySemaphore) for UART0_BinarySemaphore
    gametasks.o(.text.UART0_HandlerTask) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    gametasks.o(.text.UART0_HandlerTask) refers to game.o(.bss.gameData_Mutex) for gameData_Mutex
    gametasks.o(.text.UART0_HandlerTask) refers to uart.o(.text.UART0_GetReceivedChar) for UART0_GetReceivedChar
    gametasks.o(.text.UART0_HandlerTask) refers to game.o(.bss.currentCmd) for currentCmd
    gametasks.o(.text.UART0_HandlerTask) refers to game.o(.bss.isPlaying) for isPlaying
    gametasks.o(.text.UART0_HandlerTask) refers to game.o(.bss.win) for win
    gametasks.o(.text.UART0_HandlerTask) refers to game.o(.bss.score) for score
    gametasks.o(.text.UART0_HandlerTask) refers to game.o(.text.beginGame) for beginGame
    gametasks.o(.text.UART0_HandlerTask) refers to game.o(.bss.shouldPrint_BinarySemaphore) for shouldPrint_BinarySemaphore
    gametasks.o(.text.UART0_HandlerTask) refers to queue.o(.text.xQueueGenericSend) for xQueueGenericSend
    gametasks.o(.text.UART0_HandlerTask) refers to game.o(.bss.shouldUpdate_BinarySemaphore) for shouldUpdate_BinarySemaphore
    gametasks.o(.ARM.exidx.text.UART0_HandlerTask) refers to gametasks.o(.text.UART0_HandlerTask) for [Anonymous Symbol]
    gametasks.o(.text.Task_GamePrint) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    gametasks.o(.text.Task_GamePrint) refers to game.o(.bss.shouldPrint_BinarySemaphore) for shouldPrint_BinarySemaphore
    gametasks.o(.text.Task_GamePrint) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    gametasks.o(.text.Task_GamePrint) refers to gametasks.o(.rodata.str1.1) for .L.str
    gametasks.o(.text.Task_GamePrint) refers to uart.o(.text.UART0_Print) for UART0_Print
    gametasks.o(.text.Task_GamePrint) refers to game.o(.text.gamePrint) for gamePrint
    gametasks.o(.text.Task_GamePrint) refers to tasks.o(.text.xTaskDelayUntil) for xTaskDelayUntil
    gametasks.o(.ARM.exidx.text.Task_GamePrint) refers to gametasks.o(.text.Task_GamePrint) for [Anonymous Symbol]
    gametasks.o(.text.Task_GameUpdate) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    gametasks.o(.text.Task_GameUpdate) refers to game.o(.bss.shouldUpdate_BinarySemaphore) for shouldUpdate_BinarySemaphore
    gametasks.o(.text.Task_GameUpdate) refers to queue.o(.text.xQueueSemaphoreTake) for xQueueSemaphoreTake
    gametasks.o(.text.Task_GameUpdate) refers to game.o(.text.gameUpdate) for gameUpdate
    gametasks.o(.text.Task_GameUpdate) refers to game.o(.bss.isPlaying) for isPlaying
    gametasks.o(.text.Task_GameUpdate) refers to game.o(.bss.level) for level
    gametasks.o(.ARM.exidx.text.Task_GameUpdate) refers to gametasks.o(.text.Task_GameUpdate) for [Anonymous Symbol]
    gametasks.o(.text.Task_UpdateTime) refers to tasks.o(.text.xTaskGetTickCount) for xTaskGetTickCount
    gametasks.o(.text.Task_UpdateTime) refers to game.o(.bss.isPlaying) for isPlaying
    gametasks.o(.text.Task_UpdateTime) refers to game.o(.bss.timeElapsed) for timeElapsed
    gametasks.o(.text.Task_UpdateTime) refers to tasks.o(.text.xTaskDelayUntil) for xTaskDelayUntil
    gametasks.o(.ARM.exidx.text.Task_UpdateTime) refers to gametasks.o(.text.Task_UpdateTime) for [Anonymous Symbol]
    gametasks.o(.text.UART0_Handler) refers to game.o(.bss.UART0_BinarySemaphore) for UART0_BinarySemaphore
    gametasks.o(.text.UART0_Handler) refers to queue.o(.text.xQueueGiveFromISR) for xQueueGiveFromISR
    gametasks.o(.ARM.exidx.text.UART0_Handler) refers to gametasks.o(.text.UART0_Handler) for [Anonymous Symbol]
    startup_tm4c123.o(RESET) refers to startup_tm4c123.o(STACK) for __initial_sp
    startup_tm4c123.o(RESET) refers to startup_tm4c123.o(.text) for Reset_Handler
    startup_tm4c123.o(RESET) refers to port.o(.text.SVC_Handler) for SVC_Handler
    startup_tm4c123.o(RESET) refers to port.o(.text.PendSV_Handler) for PendSV_Handler
    startup_tm4c123.o(RESET) refers to port.o(.text.SysTick_Handler) for SysTick_Handler
    startup_tm4c123.o(RESET) refers to gametasks.o(.text.UART0_Handler) for UART0_Handler
    startup_tm4c123.o(.text) refers to system_tm4c123.o(.text.SystemInit) for SystemInit
    startup_tm4c123.o(.text) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    system_tm4c123.o(.text.SystemCoreClockUpdate) refers to system_tm4c123.o(.text.getOscClk) for getOscClk
    system_tm4c123.o(.text.SystemCoreClockUpdate) refers to system_tm4c123.o(.data.SystemCoreClock) for SystemCoreClock
    system_tm4c123.o(.ARM.exidx.text.SystemCoreClockUpdate) refers to system_tm4c123.o(.text.SystemCoreClockUpdate) for [Anonymous Symbol]
    system_tm4c123.o(.ARM.exidx.text.getOscClk) refers to system_tm4c123.o(.text.getOscClk) for [Anonymous Symbol]
    system_tm4c123.o(.ARM.exidx.text.SystemInit) refers to system_tm4c123.o(.text.SystemInit) for [Anonymous Symbol]
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry10a.o(.ARM.Collect$$$$0000000D) for __rt_final_cpp
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry11a.o(.ARM.Collect$$$$0000000F) for __rt_final_exit
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry7b.o(.ARM.Collect$$$$00000008) for _main_clock
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry8b.o(.ARM.Collect$$$$0000000A) for _main_cpp_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry9a.o(.ARM.Collect$$$$0000000B) for _main_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry5.o(.ARM.Collect$$$$00000004) for _main_scatterload
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry2.o(.ARM.Collect$$$$00000001) for _main_stk
    ldiv.o(.text) refers to uldiv.o(.text) for __aeabi_uldivmod
    rand.o(.text) refers to rand.o(.data) for .data
    dadd.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dadd.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    dadd.o(.text) refers to llsshr.o(.text) for __aeabi_lasr
    dadd.o(.text) refers to depilogue.o(.text) for _double_epilogue
    dmul.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dmul.o(.text) refers to depilogue.o(.text) for _double_epilogue
    dfltui.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dfltui.o(.text) refers to depilogue.o(.text) for _double_epilogue
    dfixui.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dfixui.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    entry2.o(.ARM.Collect$$$$00000001) refers to entry2.o(.ARM.Collect$$$$00002712) for __lit__00000000
    entry2.o(.ARM.Collect$$$$00002712) refers to startup_tm4c123.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to startup_tm4c123.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    entry5.o(.ARM.Collect$$$$00000004) refers to init.o(.text) for __scatterload
    entry9a.o(.ARM.Collect$$$$0000000B) refers to main.o(.text.main) for main
    entry9b.o(.ARM.Collect$$$$0000000C) refers to main.o(.text.main) for main
    uldiv.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    uldiv.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    depilogue.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    depilogue.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    depilogue.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    init.o(.text) refers to entry5.o(.ARM.Collect$$$$00000004) for __main_after_scatterload


==============================================================================

Removing Unused input sections from the image.

    Removing queue.o(.text), (0 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericReset), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericCreate), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvInitialiseNewQueue), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateMutex), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvInitialiseMutex), (8 bytes).
    Removing queue.o(.text.xQueueGiveMutexRecursive), (80 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGiveMutexRecursive), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericSend), (8 bytes).
    Removing queue.o(.text.xQueueTakeMutexRecursive), (82 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueTakeMutexRecursive), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueSemaphoreTake), (8 bytes).
    Removing queue.o(.text.xQueueCreateCountingSemaphore), (66 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateCountingSemaphore), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvCopyDataToQueue), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvNotifyQueueSetContainer), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvIsQueueFull), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvUnlockQueue), (8 bytes).
    Removing queue.o(.text.xQueueGenericSendFromISR), (250 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGenericSendFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueGiveFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueReceive), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvCopyDataFromQueue), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvIsQueueEmpty), (8 bytes).
    Removing queue.o(.ARM.exidx.text.prvGetDisinheritPriorityAfterTimeout), (8 bytes).
    Removing queue.o(.text.xQueuePeek), (342 bytes).
    Removing queue.o(.ARM.exidx.text.xQueuePeek), (8 bytes).
    Removing queue.o(.text.xQueueReceiveFromISR), (178 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueReceiveFromISR), (8 bytes).
    Removing queue.o(.text.xQueuePeekFromISR), (96 bytes).
    Removing queue.o(.ARM.exidx.text.xQueuePeekFromISR), (8 bytes).
    Removing queue.o(.text.uxQueueMessagesWaiting), (26 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueMessagesWaiting), (8 bytes).
    Removing queue.o(.text.uxQueueSpacesAvailable), (34 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueSpacesAvailable), (8 bytes).
    Removing queue.o(.text.uxQueueMessagesWaitingFromISR), (20 bytes).
    Removing queue.o(.ARM.exidx.text.uxQueueMessagesWaitingFromISR), (8 bytes).
    Removing queue.o(.text.vQueueDelete), (20 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueDelete), (8 bytes).
    Removing queue.o(.text.xQueueIsQueueEmptyFromISR), (34 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueIsQueueEmptyFromISR), (8 bytes).
    Removing queue.o(.text.xQueueIsQueueFullFromISR), (40 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueIsQueueFullFromISR), (8 bytes).
    Removing queue.o(.ARM.exidx.text.vQueueWaitForMessageRestricted), (8 bytes).
    Removing queue.o(.text.xQueueCreateSet), (24 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueCreateSet), (8 bytes).
    Removing queue.o(.text.xQueueAddToSet), (64 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueAddToSet), (8 bytes).
    Removing queue.o(.text.xQueueRemoveFromSet), (72 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueRemoveFromSet), (8 bytes).
    Removing queue.o(.text.xQueueSelectFromSet), (28 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueSelectFromSet), (8 bytes).
    Removing queue.o(.text.xQueueSelectFromSetFromISR), (24 bytes).
    Removing queue.o(.ARM.exidx.text.xQueueSelectFromSetFromISR), (8 bytes).
    Removing tasks.o(.text), (0 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCreate), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvInitialiseNewTask), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvAddNewTaskToReadyList), (8 bytes).
    Removing tasks.o(.text.vTaskDelete), (304 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskDelete), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvResetNextTaskUnblockTime), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvDeleteTCB), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskDelayUntil), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSuspendAll), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvAddCurrentTaskToDelayedList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskResumeAll), (8 bytes).
    Removing tasks.o(.text.vTaskDelay), (74 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskDelay), (8 bytes).
    Removing tasks.o(.text.eTaskGetState), (244 bytes).
    Removing tasks.o(.ARM.exidx.text.eTaskGetState), (8 bytes).
    Removing tasks.o(.text.uxTaskPriorityGet), (56 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskPriorityGet), (8 bytes).
    Removing tasks.o(.text.uxTaskPriorityGetFromISR), (84 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskPriorityGetFromISR), (8 bytes).
    Removing tasks.o(.text.vTaskPrioritySet), (454 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPrioritySet), (8 bytes).
    Removing tasks.o(.text.vTaskSuspend), (342 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSuspend), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSwitchContext), (8 bytes).
    Removing tasks.o(.text.vTaskResume), (236 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskResume), (8 bytes).
    Removing tasks.o(.text.prvTaskIsTaskSuspended), (78 bytes).
    Removing tasks.o(.ARM.exidx.text.prvTaskIsTaskSuspended), (8 bytes).
    Removing tasks.o(.text.xTaskResumeFromISR), (272 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskResumeFromISR), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskStartScheduler), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvIdleTask), (8 bytes).
    Removing tasks.o(.text.vTaskEndScheduler), (42 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskEndScheduler), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskIncrementTick), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetTickCount), (8 bytes).
    Removing tasks.o(.text.xTaskGetTickCountFromISR), (24 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetTickCountFromISR), (8 bytes).
    Removing tasks.o(.text.uxTaskGetNumberOfTasks), (12 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskGetNumberOfTasks), (8 bytes).
    Removing tasks.o(.text.pcTaskGetName), (42 bytes).
    Removing tasks.o(.ARM.exidx.text.pcTaskGetName), (8 bytes).
    Removing tasks.o(.text.xTaskCatchUpTicks), (38 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCatchUpTicks), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnEventList), (8 bytes).
    Removing tasks.o(.text.vTaskPlaceOnUnorderedEventList), (92 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnUnorderedEventList), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPlaceOnEventListRestricted), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskRemoveFromEventList), (8 bytes).
    Removing tasks.o(.text.vTaskRemoveFromUnorderedEventList), (292 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskRemoveFromUnorderedEventList), (8 bytes).
    Removing tasks.o(.text.vTaskSetTimeOutState), (46 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskSetTimeOutState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskInternalSetTimeOutState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskCheckForTimeOut), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskMissedYield), (8 bytes).
    Removing tasks.o(.text.xTaskGetCurrentTaskHandle), (20 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetCurrentTaskHandle), (8 bytes).
    Removing tasks.o(.text.xTaskGetSchedulerState), (56 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGetSchedulerState), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskPriorityInherit), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskPriorityDisinherit), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskPriorityDisinheritAfterTimeout), (8 bytes).
    Removing tasks.o(.text.uxTaskResetEventItemValue), (34 bytes).
    Removing tasks.o(.ARM.exidx.text.uxTaskResetEventItemValue), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.pvTaskIncrementMutexHeldCount), (8 bytes).
    Removing tasks.o(.text.ulTaskGenericNotifyTake), (220 bytes).
    Removing tasks.o(.ARM.exidx.text.ulTaskGenericNotifyTake), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyWait), (252 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyWait), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotify), (430 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotify), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyFromISR), (540 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyFromISR), (8 bytes).
    Removing tasks.o(.text.vTaskGenericNotifyGiveFromISR), (406 bytes).
    Removing tasks.o(.ARM.exidx.text.vTaskGenericNotifyGiveFromISR), (8 bytes).
    Removing tasks.o(.text.xTaskGenericNotifyStateClear), (92 bytes).
    Removing tasks.o(.ARM.exidx.text.xTaskGenericNotifyStateClear), (8 bytes).
    Removing tasks.o(.text.ulTaskGenericNotifyValueClear), (82 bytes).
    Removing tasks.o(.ARM.exidx.text.ulTaskGenericNotifyValueClear), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvInitialiseTaskLists), (8 bytes).
    Removing tasks.o(.ARM.exidx.text.prvCheckTasksWaitingTermination), (8 bytes).
    Removing list.o(.text), (0 bytes).
    Removing list.o(.ARM.exidx.text.vListInitialise), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInitialiseItem), (8 bytes).
    Removing list.o(.text.vListInsertEnd), (58 bytes).
    Removing list.o(.ARM.exidx.text.vListInsertEnd), (8 bytes).
    Removing list.o(.ARM.exidx.text.vListInsert), (8 bytes).
    Removing list.o(.ARM.exidx.text.uxListRemove), (8 bytes).
    Removing port.o(.text), (0 bytes).
    Removing port.o(.ARM.exidx.text.pxPortInitialiseStack), (8 bytes).
    Removing port.o(.ARM.exidx.text.prvTaskExitError), (8 bytes).
    Removing port.o(.ARM.exidx.text.SVC_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.xPortStartScheduler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortSetupTimerInterrupt), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortEnableVFP), (8 bytes).
    Removing port.o(.ARM.exidx.text.prvPortStartFirstTask), (8 bytes).
    Removing port.o(.text.vPortEndScheduler), (2 bytes).
    Removing port.o(.ARM.exidx.text.vPortEndScheduler), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortEnterCritical), (8 bytes).
    Removing port.o(.ARM.exidx.text.vPortExitCritical), (8 bytes).
    Removing port.o(.ARM.exidx.text.PendSV_Handler), (8 bytes).
    Removing port.o(.ARM.exidx.text.SysTick_Handler), (8 bytes).
    Removing timers.o(.text), (0 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerCreateTimerTask), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvCheckForValidListAndQueue), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvTimerTask), (8 bytes).
    Removing timers.o(.text.xTimerCreate), (74 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerCreate), (8 bytes).
    Removing timers.o(.text.prvInitialiseNewTimer), (82 bytes).
    Removing timers.o(.ARM.exidx.text.prvInitialiseNewTimer), (8 bytes).
    Removing timers.o(.text.xTimerGenericCommand), (148 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGenericCommand), (8 bytes).
    Removing timers.o(.text.xTimerGetTimerDaemonTaskHandle), (12 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetTimerDaemonTaskHandle), (8 bytes).
    Removing timers.o(.text.xTimerGetPeriod), (16 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetPeriod), (8 bytes).
    Removing timers.o(.text.vTimerSetReloadMode), (62 bytes).
    Removing timers.o(.ARM.exidx.text.vTimerSetReloadMode), (8 bytes).
    Removing timers.o(.text.uxTimerGetReloadMode), (50 bytes).
    Removing timers.o(.ARM.exidx.text.uxTimerGetReloadMode), (8 bytes).
    Removing timers.o(.text.xTimerGetExpiryTime), (20 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerGetExpiryTime), (8 bytes).
    Removing timers.o(.text.pcTimerGetName), (16 bytes).
    Removing timers.o(.ARM.exidx.text.pcTimerGetName), (8 bytes).
    Removing timers.o(.text.xTimerIsTimerActive), (48 bytes).
    Removing timers.o(.ARM.exidx.text.xTimerIsTimerActive), (8 bytes).
    Removing timers.o(.text.pvTimerGetTimerID), (30 bytes).
    Removing timers.o(.ARM.exidx.text.pvTimerGetTimerID), (8 bytes).
    Removing timers.o(.text.vTimerSetTimerID), (30 bytes).
    Removing timers.o(.ARM.exidx.text.vTimerSetTimerID), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvGetNextExpireTime), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvProcessTimerOrBlockTask), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvProcessReceivedCommands), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvSampleTimeNow), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvProcessExpiredTimer), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvSwitchTimerLists), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvReloadTimer), (8 bytes).
    Removing timers.o(.ARM.exidx.text.prvInsertTimerInActiveList), (8 bytes).
    Removing heap_4.o(.text), (0 bytes).
    Removing heap_4.o(.ARM.exidx.text.pvPortMalloc), (8 bytes).
    Removing heap_4.o(.ARM.exidx.text.prvHeapInit), (8 bytes).
    Removing heap_4.o(.ARM.exidx.text.prvInsertBlockIntoFreeList), (8 bytes).
    Removing heap_4.o(.ARM.exidx.text.vPortFree), (8 bytes).
    Removing heap_4.o(.text.xPortGetFreeHeapSize), (12 bytes).
    Removing heap_4.o(.ARM.exidx.text.xPortGetFreeHeapSize), (8 bytes).
    Removing heap_4.o(.text.xPortGetMinimumEverFreeHeapSize), (12 bytes).
    Removing heap_4.o(.ARM.exidx.text.xPortGetMinimumEverFreeHeapSize), (8 bytes).
    Removing heap_4.o(.text.vPortInitialiseBlocks), (2 bytes).
    Removing heap_4.o(.ARM.exidx.text.vPortInitialiseBlocks), (8 bytes).
    Removing heap_4.o(.text.vPortGetHeapStats), (206 bytes).
    Removing heap_4.o(.ARM.exidx.text.vPortGetHeapStats), (8 bytes).
    Removing main.o(.text), (0 bytes).
    Removing main.o(.ARM.exidx.text.main), (8 bytes).
    Removing main.o(.text.vApplicationMallocFailedHook), (4 bytes).
    Removing main.o(.ARM.exidx.text.vApplicationMallocFailedHook), (8 bytes).
    Removing main.o(.text.vApplicationStackOverflowHook), (10 bytes).
    Removing main.o(.ARM.exidx.text.vApplicationStackOverflowHook), (8 bytes).
    Removing main.o(.text.vApplicationIdleHook), (2 bytes).
    Removing main.o(.ARM.exidx.text.vApplicationIdleHook), (8 bytes).
    Removing main.o(.ARM.use_no_argv), (4 bytes).
    Removing game.o(.text), (0 bytes).
    Removing game.o(.ARM.exidx.text.gameInit), (8 bytes).
    Removing game.o(.ARM.exidx.text.beginGame), (8 bytes).
    Removing game.o(.ARM.exidx.text.gamePrint), (8 bytes).
    Removing game.o(.ARM.exidx.text.gameUpdate), (8 bytes).
    Removing game.o(.ARM.exidx.text.absolute), (8 bytes).
    Removing game.o(.ARM.exidx.text.loseGame), (8 bytes).
    Removing game.o(.ARM.exidx.text.winGame), (8 bytes).
    Removing uart.o(.text), (0 bytes).
    Removing uart.o(.ARM.exidx.text.UART0_init), (8 bytes).
    Removing uart.o(.ARM.exidx.text.__NVIC_SetPriority), (8 bytes).
    Removing uart.o(.ARM.exidx.text.__NVIC_EnableIRQ), (8 bytes).
    Removing uart.o(.ARM.exidx.text.UART0_SendChar), (8 bytes).
    Removing uart.o(.ARM.exidx.text.UART0_Print), (8 bytes).
    Removing uart.o(.ARM.exidx.text.UART0_PrintDecimal), (8 bytes).
    Removing uart.o(.ARM.exidx.text.UART0_GetReceivedChar), (8 bytes).
    Removing gametasks.o(.text), (0 bytes).
    Removing gametasks.o(.ARM.exidx.text.UART0_HandlerTask), (8 bytes).
    Removing gametasks.o(.ARM.exidx.text.Task_GamePrint), (8 bytes).
    Removing gametasks.o(.ARM.exidx.text.Task_GameUpdate), (8 bytes).
    Removing gametasks.o(.ARM.exidx.text.Task_UpdateTime), (8 bytes).
    Removing gametasks.o(.ARM.exidx.text.UART0_Handler), (8 bytes).
    Removing startup_tm4c123.o(HEAP), (0 bytes).
    Removing system_tm4c123.o(.text), (0 bytes).
    Removing system_tm4c123.o(.text.SystemCoreClockUpdate), (326 bytes).
    Removing system_tm4c123.o(.ARM.exidx.text.SystemCoreClockUpdate), (8 bytes).
    Removing system_tm4c123.o(.text.getOscClk), (360 bytes).
    Removing system_tm4c123.o(.ARM.exidx.text.getOscClk), (8 bytes).
    Removing system_tm4c123.o(.ARM.exidx.text.SystemInit), (8 bytes).

245 unused section(s) (total 9234 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    ../clib/microlib/division.c              0x00000000   Number         0  ldiv.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  uldiv.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry2.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry5.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11b.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llshl.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llushr.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llsshr.o ABSOLUTE
    ../clib/microlib/stdlib/rand.c           0x00000000   Number         0  rand.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpya.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpyb.o ABSOLUTE
    ../clib/microlib/stubs.s                 0x00000000   Number         0  iusefp.o ABSOLUTE
    ../fplib/microlib/fpadd.c                0x00000000   Number         0  dadd.o ABSOLUTE
    ../fplib/microlib/fpepilogue.c           0x00000000   Number         0  depilogue.o ABSOLUTE
    ../fplib/microlib/fpfix.c                0x00000000   Number         0  dfixui.o ABSOLUTE
    ../fplib/microlib/fpflt.c                0x00000000   Number         0  dfltui.o ABSOLUTE
    ../fplib/microlib/fpmul.c                0x00000000   Number         0  dmul.o ABSOLUTE
    RTE/Device/TM4C123GH6PM/startup_TM4C123.s 0x00000000   Number         0  startup_tm4c123.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    game.c                                   0x00000000   Number         0  game.o ABSOLUTE
    gameTasks.c                              0x00000000   Number         0  gametasks.o ABSOLUTE
    handlers.s                               0x00000000   Number         0  handlers.o ABSOLUTE
    heap_4.c                                 0x00000000   Number         0  heap_4.o ABSOLUTE
    init.s                                   0x00000000   Number         0  init.o ABSOLUTE
    list.c                                   0x00000000   Number         0  list.o ABSOLUTE
    main.c                                   0x00000000   Number         0  main.o ABSOLUTE
    port.c                                   0x00000000   Number         0  port.o ABSOLUTE
    queue.c                                  0x00000000   Number         0  queue.o ABSOLUTE
    system_TM4C123.c                         0x00000000   Number         0  system_tm4c123.o ABSOLUTE
    tasks.c                                  0x00000000   Number         0  tasks.o ABSOLUTE
    timers.c                                 0x00000000   Number         0  timers.o ABSOLUTE
    uart.c                                   0x00000000   Number         0  uart.o ABSOLUTE
    RESET                                    0x00000000   Section      620  startup_tm4c123.o(RESET)
    .ARM.Collect$$$$00000000                 0x0000026c   Section        0  entry.o(.ARM.Collect$$$$00000000)
    .ARM.Collect$$$$00000001                 0x0000026c   Section        4  entry2.o(.ARM.Collect$$$$00000001)
    .ARM.Collect$$$$00000004                 0x00000270   Section        4  entry5.o(.ARM.Collect$$$$00000004)
    .ARM.Collect$$$$00000008                 0x00000274   Section        0  entry7b.o(.ARM.Collect$$$$00000008)
    .ARM.Collect$$$$0000000A                 0x00000274   Section        0  entry8b.o(.ARM.Collect$$$$0000000A)
    .ARM.Collect$$$$0000000B                 0x00000274   Section        8  entry9a.o(.ARM.Collect$$$$0000000B)
    __lit__00000000                          0x0000027c   Data           4  entry2.o(.ARM.Collect$$$$00002712)
    .ARM.Collect$$$$0000000D                 0x0000027c   Section        0  entry10a.o(.ARM.Collect$$$$0000000D)
    .ARM.Collect$$$$0000000F                 0x0000027c   Section        0  entry11a.o(.ARM.Collect$$$$0000000F)
    .ARM.Collect$$$$00002712                 0x0000027c   Section        4  entry2.o(.ARM.Collect$$$$00002712)
    $v0                                      0x00000280   Number         0  startup_tm4c123.o(.text)
    .text                                    0x00000280   Section      252  startup_tm4c123.o(.text)
    .text                                    0x0000037c   Section        0  ldiv.o(.text)
    .text                                    0x000003e0   Section        0  rand.o(.text)
    .text                                    0x00000404   Section        0  memcpya.o(.text)
    .text                                    0x00000428   Section        0  dadd.o(.text)
    .text                                    0x00000576   Section        0  dmul.o(.text)
    .text                                    0x0000065a   Section        0  dfltui.o(.text)
    .text                                    0x00000674   Section        0  dfixui.o(.text)
    .text                                    0x000006a6   Section        0  uldiv.o(.text)
    .text                                    0x00000708   Section        0  llshl.o(.text)
    .text                                    0x00000726   Section        0  llushr.o(.text)
    .text                                    0x00000746   Section        0  llsshr.o(.text)
    .text                                    0x0000076a   Section        0  iusefp.o(.text)
    .text                                    0x0000076a   Section        0  depilogue.o(.text)
    .text                                    0x00000824   Section       36  init.o(.text)
    [Anonymous Symbol]                       0x00000850   Section        0  port.o(.text.PendSV_Handler)
    pxCurrentTCBConst                        0x000008b0   Number         0  port.o(.text.PendSV_Handler)
    [Anonymous Symbol]                       0x000008c0   Section        0  port.o(.text.SVC_Handler)
    pxCurrentTCBConst2                       0x000008e0   Number         0  port.o(.text.SVC_Handler)
    [Anonymous Symbol]                       0x000008e4   Section        0  port.o(.text.SysTick_Handler)
    [Anonymous Symbol]                       0x00000920   Section        0  system_tm4c123.o(.text.SystemInit)
    [Anonymous Symbol]                       0x00000a2c   Section        0  gametasks.o(.text.Task_GamePrint)
    [Anonymous Symbol]                       0x00000a64   Section        0  gametasks.o(.text.Task_GameUpdate)
    [Anonymous Symbol]                       0x00000ae0   Section        0  gametasks.o(.text.Task_UpdateTime)
    [Anonymous Symbol]                       0x00000b28   Section        0  uart.o(.text.UART0_GetReceivedChar)
    [Anonymous Symbol]                       0x00000b38   Section        0  gametasks.o(.text.UART0_Handler)
    [Anonymous Symbol]                       0x00000b88   Section        0  gametasks.o(.text.UART0_HandlerTask)
    [Anonymous Symbol]                       0x00000c58   Section        0  uart.o(.text.UART0_Print)
    [Anonymous Symbol]                       0x00000c90   Section        0  uart.o(.text.UART0_PrintDecimal)
    [Anonymous Symbol]                       0x00000d68   Section        0  uart.o(.text.UART0_SendChar)
    [Anonymous Symbol]                       0x00000d98   Section        0  uart.o(.text.UART0_init)
    __NVIC_EnableIRQ                         0x00000f21   Thumb Code    48  uart.o(.text.__NVIC_EnableIRQ)
    [Anonymous Symbol]                       0x00000f20   Section        0  uart.o(.text.__NVIC_EnableIRQ)
    __NVIC_SetPriority                       0x00000f51   Thumb Code    66  uart.o(.text.__NVIC_SetPriority)
    [Anonymous Symbol]                       0x00000f50   Section        0  uart.o(.text.__NVIC_SetPriority)
    absolute                                 0x00000f95   Thumb Code    64  game.o(.text.absolute)
    [Anonymous Symbol]                       0x00000f94   Section        0  game.o(.text.absolute)
    [Anonymous Symbol]                       0x00000fd4   Section        0  game.o(.text.beginGame)
    [Anonymous Symbol]                       0x000010ec   Section        0  game.o(.text.gameInit)
    [Anonymous Symbol]                       0x00001204   Section        0  game.o(.text.gamePrint)
    [Anonymous Symbol]                       0x00001614   Section        0  game.o(.text.gameUpdate)
    [Anonymous Symbol]                       0x00001b7c   Section        0  game.o(.text.loseGame)
    [Anonymous Symbol]                       0x00001bac   Section        0  main.o(.text.main)
    prvAddCurrentTaskToDelayedList           0x00001c59   Thumb Code   282  tasks.o(.text.prvAddCurrentTaskToDelayedList)
    [Anonymous Symbol]                       0x00001c58   Section        0  tasks.o(.text.prvAddCurrentTaskToDelayedList)
    prvAddNewTaskToReadyList                 0x00001d75   Thumb Code   334  tasks.o(.text.prvAddNewTaskToReadyList)
    [Anonymous Symbol]                       0x00001d74   Section        0  tasks.o(.text.prvAddNewTaskToReadyList)
    prvCheckForValidListAndQueue             0x00001ec5   Thumb Code   106  timers.o(.text.prvCheckForValidListAndQueue)
    [Anonymous Symbol]                       0x00001ec4   Section        0  timers.o(.text.prvCheckForValidListAndQueue)
    prvCheckTasksWaitingTermination          0x00001f31   Thumb Code    90  tasks.o(.text.prvCheckTasksWaitingTermination)
    [Anonymous Symbol]                       0x00001f30   Section        0  tasks.o(.text.prvCheckTasksWaitingTermination)
    prvCopyDataFromQueue                     0x00001f8d   Thumb Code    66  queue.o(.text.prvCopyDataFromQueue)
    [Anonymous Symbol]                       0x00001f8c   Section        0  queue.o(.text.prvCopyDataFromQueue)
    prvCopyDataToQueue                       0x00001fd1   Thumb Code   204  queue.o(.text.prvCopyDataToQueue)
    [Anonymous Symbol]                       0x00001fd0   Section        0  queue.o(.text.prvCopyDataToQueue)
    prvDeleteTCB                             0x0000209d   Thumb Code    24  tasks.o(.text.prvDeleteTCB)
    [Anonymous Symbol]                       0x0000209c   Section        0  tasks.o(.text.prvDeleteTCB)
    prvGetDisinheritPriorityAfterTimeout     0x000020b5   Thumb Code    38  queue.o(.text.prvGetDisinheritPriorityAfterTimeout)
    [Anonymous Symbol]                       0x000020b4   Section        0  queue.o(.text.prvGetDisinheritPriorityAfterTimeout)
    prvGetNextExpireTime                     0x000020dd   Thumb Code    64  timers.o(.text.prvGetNextExpireTime)
    [Anonymous Symbol]                       0x000020dc   Section        0  timers.o(.text.prvGetNextExpireTime)
    prvHeapInit                              0x0000211d   Thumb Code   188  heap_4.o(.text.prvHeapInit)
    [Anonymous Symbol]                       0x0000211c   Section        0  heap_4.o(.text.prvHeapInit)
    prvIdleTask                              0x000021d9   Thumb Code    56  tasks.o(.text.prvIdleTask)
    [Anonymous Symbol]                       0x000021d8   Section        0  tasks.o(.text.prvIdleTask)
    prvInitialiseMutex                       0x00002211   Thumb Code    44  queue.o(.text.prvInitialiseMutex)
    [Anonymous Symbol]                       0x00002210   Section        0  queue.o(.text.prvInitialiseMutex)
    prvInitialiseNewQueue                    0x0000223d   Thumb Code    68  queue.o(.text.prvInitialiseNewQueue)
    [Anonymous Symbol]                       0x0000223c   Section        0  queue.o(.text.prvInitialiseNewQueue)
    prvInitialiseNewTask                     0x00002281   Thumb Code   244  tasks.o(.text.prvInitialiseNewTask)
    [Anonymous Symbol]                       0x00002280   Section        0  tasks.o(.text.prvInitialiseNewTask)
    prvInitialiseTaskLists                   0x00002375   Thumb Code   142  tasks.o(.text.prvInitialiseTaskLists)
    [Anonymous Symbol]                       0x00002374   Section        0  tasks.o(.text.prvInitialiseTaskLists)
    prvInsertBlockIntoFreeList               0x00002405   Thumb Code   198  heap_4.o(.text.prvInsertBlockIntoFreeList)
    [Anonymous Symbol]                       0x00002404   Section        0  heap_4.o(.text.prvInsertBlockIntoFreeList)
    prvInsertTimerInActiveList               0x000024cd   Thumb Code   134  timers.o(.text.prvInsertTimerInActiveList)
    [Anonymous Symbol]                       0x000024cc   Section        0  timers.o(.text.prvInsertTimerInActiveList)
    prvIsQueueEmpty                          0x00002555   Thumb Code    40  queue.o(.text.prvIsQueueEmpty)
    [Anonymous Symbol]                       0x00002554   Section        0  queue.o(.text.prvIsQueueEmpty)
    prvIsQueueFull                           0x0000257d   Thumb Code    46  queue.o(.text.prvIsQueueFull)
    [Anonymous Symbol]                       0x0000257c   Section        0  queue.o(.text.prvIsQueueFull)
    prvNotifyQueueSetContainer               0x000025ad   Thumb Code   120  queue.o(.text.prvNotifyQueueSetContainer)
    [Anonymous Symbol]                       0x000025ac   Section        0  queue.o(.text.prvNotifyQueueSetContainer)
    prvPortStartFirstTask                    0x00002625   Thumb Code    40  port.o(.text.prvPortStartFirstTask)
    [Anonymous Symbol]                       0x00002624   Section        0  port.o(.text.prvPortStartFirstTask)
    prvProcessExpiredTimer                   0x0000264d   Thumb Code    84  timers.o(.text.prvProcessExpiredTimer)
    [Anonymous Symbol]                       0x0000264c   Section        0  timers.o(.text.prvProcessExpiredTimer)
    prvProcessReceivedCommands               0x000026a1   Thumb Code   294  timers.o(.text.prvProcessReceivedCommands)
    [Anonymous Symbol]                       0x000026a0   Section        0  timers.o(.text.prvProcessReceivedCommands)
    prvProcessTimerOrBlockTask               0x000027c9   Thumb Code   154  timers.o(.text.prvProcessTimerOrBlockTask)
    [Anonymous Symbol]                       0x000027c8   Section        0  timers.o(.text.prvProcessTimerOrBlockTask)
    prvReloadTimer                           0x00002865   Thumb Code    52  timers.o(.text.prvReloadTimer)
    [Anonymous Symbol]                       0x00002864   Section        0  timers.o(.text.prvReloadTimer)
    prvResetNextTaskUnblockTime              0x00002899   Thumb Code    60  tasks.o(.text.prvResetNextTaskUnblockTime)
    [Anonymous Symbol]                       0x00002898   Section        0  tasks.o(.text.prvResetNextTaskUnblockTime)
    prvSampleTimeNow                         0x000028d5   Thumb Code    68  timers.o(.text.prvSampleTimeNow)
    [Anonymous Symbol]                       0x000028d4   Section        0  timers.o(.text.prvSampleTimeNow)
    prvSwitchTimerLists                      0x00002919   Thumb Code    82  timers.o(.text.prvSwitchTimerLists)
    [Anonymous Symbol]                       0x00002918   Section        0  timers.o(.text.prvSwitchTimerLists)
    prvTaskExitError                         0x0000296d   Thumb Code    38  port.o(.text.prvTaskExitError)
    [Anonymous Symbol]                       0x0000296c   Section        0  port.o(.text.prvTaskExitError)
    prvTimerTask                             0x00002995   Thumb Code    30  timers.o(.text.prvTimerTask)
    [Anonymous Symbol]                       0x00002994   Section        0  timers.o(.text.prvTimerTask)
    prvUnlockQueue                           0x000029b5   Thumb Code   204  queue.o(.text.prvUnlockQueue)
    [Anonymous Symbol]                       0x000029b4   Section        0  queue.o(.text.prvUnlockQueue)
    [Anonymous Symbol]                       0x00002a80   Section        0  heap_4.o(.text.pvPortMalloc)
    [Anonymous Symbol]                       0x00002c34   Section        0  tasks.o(.text.pvTaskIncrementMutexHeldCount)
    [Anonymous Symbol]                       0x00002c60   Section        0  port.o(.text.pxPortInitialiseStack)
    [Anonymous Symbol]                       0x00002cc0   Section        0  list.o(.text.uxListRemove)
    [Anonymous Symbol]                       0x00002d08   Section        0  list.o(.text.vListInitialise)
    [Anonymous Symbol]                       0x00002d38   Section        0  list.o(.text.vListInitialiseItem)
    [Anonymous Symbol]                       0x00002d48   Section        0  list.o(.text.vListInsert)
    vPortEnableVFP                           0x00002db5   Thumb Code    20  port.o(.text.vPortEnableVFP)
    [Anonymous Symbol]                       0x00002db4   Section        0  port.o(.text.vPortEnableVFP)
    [Anonymous Symbol]                       0x00002dc8   Section        0  port.o(.text.vPortEnterCritical)
    [Anonymous Symbol]                       0x00002df8   Section        0  port.o(.text.vPortExitCritical)
    [Anonymous Symbol]                       0x00002e20   Section        0  heap_4.o(.text.vPortFree)
    [Anonymous Symbol]                       0x00002ea4   Section        0  port.o(.text.vPortSetupTimerInterrupt)
    [Anonymous Symbol]                       0x00002ee8   Section        0  queue.o(.text.vQueueWaitForMessageRestricted)
    [Anonymous Symbol]                       0x00002f4c   Section        0  tasks.o(.text.vTaskInternalSetTimeOutState)
    [Anonymous Symbol]                       0x00002f70   Section        0  tasks.o(.text.vTaskMissedYield)
    [Anonymous Symbol]                       0x00002f80   Section        0  tasks.o(.text.vTaskPlaceOnEventList)
    [Anonymous Symbol]                       0x00002fa8   Section        0  tasks.o(.text.vTaskPlaceOnEventListRestricted)
    [Anonymous Symbol]                       0x00003008   Section        0  tasks.o(.text.vTaskPriorityDisinheritAfterTimeout)
    [Anonymous Symbol]                       0x00003140   Section        0  tasks.o(.text.vTaskStartScheduler)
    [Anonymous Symbol]                       0x000031dc   Section        0  tasks.o(.text.vTaskSuspendAll)
    __tagsym$$used.0                         0x000031ec   Number         0  tasks.o(.text.vTaskSwitchContext)
    [Anonymous Symbol]                       0x000031ec   Section        0  tasks.o(.text.vTaskSwitchContext)
    [Anonymous Symbol]                       0x00003280   Section        0  game.o(.text.winGame)
    [Anonymous Symbol]                       0x000032a8   Section        0  port.o(.text.xPortStartScheduler)
    [Anonymous Symbol]                       0x000032fc   Section        0  queue.o(.text.xQueueCreateMutex)
    [Anonymous Symbol]                       0x00003324   Section        0  queue.o(.text.xQueueGenericCreate)
    [Anonymous Symbol]                       0x000033a4   Section        0  queue.o(.text.xQueueGenericReset)
    [Anonymous Symbol]                       0x00003474   Section        0  queue.o(.text.xQueueGenericSend)
    [Anonymous Symbol]                       0x00003628   Section        0  queue.o(.text.xQueueGiveFromISR)
    [Anonymous Symbol]                       0x00003700   Section        0  queue.o(.text.xQueueReceive)
    [Anonymous Symbol]                       0x00003854   Section        0  queue.o(.text.xQueueSemaphoreTake)
    [Anonymous Symbol]                       0x000039f4   Section        0  tasks.o(.text.xTaskCheckForTimeOut)
    [Anonymous Symbol]                       0x00003a90   Section        0  tasks.o(.text.xTaskCreate)
    [Anonymous Symbol]                       0x00003b28   Section        0  tasks.o(.text.xTaskDelayUntil)
    [Anonymous Symbol]                       0x00003be4   Section        0  tasks.o(.text.xTaskGetTickCount)
    [Anonymous Symbol]                       0x00003bf8   Section        0  tasks.o(.text.xTaskIncrementTick)
    [Anonymous Symbol]                       0x00003e34   Section        0  tasks.o(.text.xTaskPriorityDisinherit)
    [Anonymous Symbol]                       0x00003f24   Section        0  tasks.o(.text.xTaskPriorityInherit)
    [Anonymous Symbol]                       0x00004080   Section        0  tasks.o(.text.xTaskRemoveFromEventList)
    [Anonymous Symbol]                       0x000041f0   Section        0  tasks.o(.text.xTaskResumeAll)
    [Anonymous Symbol]                       0x000043f0   Section        0  timers.o(.text.xTimerCreateTimerTask)
    i.__scatterload_copy                     0x00004440   Section       14  handlers.o(i.__scatterload_copy)
    i.__scatterload_null                     0x0000444e   Section        2  handlers.o(i.__scatterload_null)
    i.__scatterload_zeroinit                 0x00004450   Section       14  handlers.o(i.__scatterload_zeroinit)
    .L.str                                   0x0000445e   Data           5  tasks.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x0000445e   Section        0  tasks.o(.rodata.str1.1)
    .L.str                                   0x00004463   Data           8  timers.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x00004463   Section        0  timers.o(.rodata.str1.1)
    .L.str.3                                 0x0000446b   Data           9  main.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x0000446b   Section        0  main.o(.rodata.str1.1)
    .L.str.2                                 0x00004474   Data          11  main.o(.rodata.str1.1)
    .L.str.1                                 0x0000447f   Data          12  main.o(.rodata.str1.1)
    .L.str                                   0x0000448b   Data          11  main.o(.rodata.str1.1)
    .L.str.17                                0x00004496   Data          55  game.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x00004496   Section        0  game.o(.rodata.str1.1)
    .L.str.12                                0x000044cd   Data          55  game.o(.rodata.str1.1)
    .L.str.3                                 0x00004504   Data          53  game.o(.rodata.str1.1)
    .L.str.4                                 0x00004539   Data          53  game.o(.rodata.str1.1)
    .L.str.2                                 0x0000456e   Data          53  game.o(.rodata.str1.1)
    .L.str.6                                 0x000045a3   Data          15  game.o(.rodata.str1.1)
    .L.str.5                                 0x000045b2   Data          16  game.o(.rodata.str1.1)
    .L.str.11                                0x000045c2   Data          29  game.o(.rodata.str1.1)
    .L.str.18                                0x000045df   Data          24  game.o(.rodata.str1.1)
    .L.str.8                                 0x000045f7   Data          34  game.o(.rodata.str1.1)
    .L.str.7                                 0x00004619   Data          32  game.o(.rodata.str1.1)
    .L.str.9                                 0x00004639   Data          34  game.o(.rodata.str1.1)
    .L.str.10                                0x0000465b   Data          35  game.o(.rodata.str1.1)
    .L.str.16                                0x0000467c   Data           2  game.o(.rodata.str1.1)
    .L.str.20                                0x0000467e   Data          20  game.o(.rodata.str1.1)
    .L.str.19                                0x00004692   Data          20  game.o(.rodata.str1.1)
    .L.str.15                                0x000046a6   Data          20  game.o(.rodata.str1.1)
    .L.str.21                                0x000046ba   Data          20  game.o(.rodata.str1.1)
    .L.str.13                                0x000046ce   Data          16  game.o(.rodata.str1.1)
    .L.str.14                                0x000046de   Data          18  game.o(.rodata.str1.1)
    .L.str.1                                 0x000046f0   Data           4  game.o(.rodata.str1.1)
    .L.str                                   0x000046f4   Data           5  game.o(.rodata.str1.1)
    .L.str.22                                0x000046f9   Data           3  game.o(.rodata.str1.1)
    .L.str                                   0x000046fc   Data           7  gametasks.o(.rodata.str1.1)
    [Anonymous Symbol]                       0x000046fc   Section        0  gametasks.o(.rodata.str1.1)
    _rand_state                              0x20000000   Data           4  rand.o(.data)
    .data                                    0x20000000   Section        4  rand.o(.data)
    uxCriticalNesting                        0x20000008   Data           4  port.o(.data.uxCriticalNesting)
    [Anonymous Symbol]                       0x20000008   Section        0  port.o(.data.uxCriticalNesting)
    prvSampleTimeNow.xLastTime               0x20000da8   Data           4  timers.o(.bss.prvSampleTimeNow.xLastTime)
    [Anonymous Symbol]                       0x20000da8   Section        0  timers.o(.bss.prvSampleTimeNow.xLastTime)
    pxCurrentTimerList                       0x20000db0   Data           4  timers.o(.bss.pxCurrentTimerList)
    [Anonymous Symbol]                       0x20000db0   Section        0  timers.o(.bss.pxCurrentTimerList)
    pxDelayedTaskList                        0x20000db4   Data           4  tasks.o(.bss.pxDelayedTaskList)
    [Anonymous Symbol]                       0x20000db4   Section        0  tasks.o(.bss.pxDelayedTaskList)
    pxEnd                                    0x20000db8   Data           4  heap_4.o(.bss.pxEnd)
    [Anonymous Symbol]                       0x20000db8   Section        0  heap_4.o(.bss.pxEnd)
    pxOverflowDelayedTaskList                0x20000dbc   Data           4  tasks.o(.bss.pxOverflowDelayedTaskList)
    [Anonymous Symbol]                       0x20000dbc   Section        0  tasks.o(.bss.pxOverflowDelayedTaskList)
    pxOverflowTimerList                      0x20000dc0   Data           4  timers.o(.bss.pxOverflowTimerList)
    [Anonymous Symbol]                       0x20000dc0   Section        0  timers.o(.bss.pxOverflowTimerList)
    pxReadyTasksLists                        0x20000dc4   Data         100  tasks.o(.bss.pxReadyTasksLists)
    [Anonymous Symbol]                       0x20000dc4   Section        0  tasks.o(.bss.pxReadyTasksLists)
    ucHeap                                   0x20000e3c   Data        8192  heap_4.o(.bss.ucHeap)
    [Anonymous Symbol]                       0x20000e3c   Section        0  heap_4.o(.bss.ucHeap)
    uxCurrentNumberOfTasks                   0x20002e3c   Data           4  tasks.o(.bss.uxCurrentNumberOfTasks)
    [Anonymous Symbol]                       0x20002e3c   Section        0  tasks.o(.bss.uxCurrentNumberOfTasks)
    uxDeletedTasksWaitingCleanUp             0x20002e40   Data           4  tasks.o(.bss.uxDeletedTasksWaitingCleanUp)
    [Anonymous Symbol]                       0x20002e40   Section        0  tasks.o(.bss.uxDeletedTasksWaitingCleanUp)
    uxSchedulerSuspended                     0x20002e44   Data           4  tasks.o(.bss.uxSchedulerSuspended)
    [Anonymous Symbol]                       0x20002e44   Section        0  tasks.o(.bss.uxSchedulerSuspended)
    uxTaskNumber                             0x20002e48   Data           4  tasks.o(.bss.uxTaskNumber)
    [Anonymous Symbol]                       0x20002e48   Section        0  tasks.o(.bss.uxTaskNumber)
    uxTopReadyPriority                       0x20002e4c   Data           4  tasks.o(.bss.uxTopReadyPriority)
    [Anonymous Symbol]                       0x20002e4c   Section        0  tasks.o(.bss.uxTopReadyPriority)
    xActiveTimerList1                        0x20002e54   Data          20  timers.o(.bss.xActiveTimerList1)
    [Anonymous Symbol]                       0x20002e54   Section        0  timers.o(.bss.xActiveTimerList1)
    xActiveTimerList2                        0x20002e68   Data          20  timers.o(.bss.xActiveTimerList2)
    [Anonymous Symbol]                       0x20002e68   Section        0  timers.o(.bss.xActiveTimerList2)
    xBlockAllocatedBit                       0x20002e7c   Data           4  heap_4.o(.bss.xBlockAllocatedBit)
    [Anonymous Symbol]                       0x20002e7c   Section        0  heap_4.o(.bss.xBlockAllocatedBit)
    xDelayedTaskList1                        0x20002e80   Data          20  tasks.o(.bss.xDelayedTaskList1)
    [Anonymous Symbol]                       0x20002e80   Section        0  tasks.o(.bss.xDelayedTaskList1)
    xDelayedTaskList2                        0x20002e94   Data          20  tasks.o(.bss.xDelayedTaskList2)
    [Anonymous Symbol]                       0x20002e94   Section        0  tasks.o(.bss.xDelayedTaskList2)
    xFreeBytesRemaining                      0x20002ea8   Data           4  heap_4.o(.bss.xFreeBytesRemaining)
    [Anonymous Symbol]                       0x20002ea8   Section        0  heap_4.o(.bss.xFreeBytesRemaining)
    xIdleTaskHandle                          0x20002eac   Data           4  tasks.o(.bss.xIdleTaskHandle)
    [Anonymous Symbol]                       0x20002eac   Section        0  tasks.o(.bss.xIdleTaskHandle)
    xMinimumEverFreeBytesRemaining           0x20002eb0   Data           4  heap_4.o(.bss.xMinimumEverFreeBytesRemaining)
    [Anonymous Symbol]                       0x20002eb0   Section        0  heap_4.o(.bss.xMinimumEverFreeBytesRemaining)
    xNextTaskUnblockTime                     0x20002eb4   Data           4  tasks.o(.bss.xNextTaskUnblockTime)
    [Anonymous Symbol]                       0x20002eb4   Section        0  tasks.o(.bss.xNextTaskUnblockTime)
    xNumOfOverflows                          0x20002eb8   Data           4  tasks.o(.bss.xNumOfOverflows)
    [Anonymous Symbol]                       0x20002eb8   Section        0  tasks.o(.bss.xNumOfOverflows)
    xNumberOfSuccessfulAllocations           0x20002ebc   Data           4  heap_4.o(.bss.xNumberOfSuccessfulAllocations)
    [Anonymous Symbol]                       0x20002ebc   Section        0  heap_4.o(.bss.xNumberOfSuccessfulAllocations)
    xNumberOfSuccessfulFrees                 0x20002ec0   Data           4  heap_4.o(.bss.xNumberOfSuccessfulFrees)
    [Anonymous Symbol]                       0x20002ec0   Section        0  heap_4.o(.bss.xNumberOfSuccessfulFrees)
    xPendedTicks                             0x20002ec4   Data           4  tasks.o(.bss.xPendedTicks)
    [Anonymous Symbol]                       0x20002ec4   Section        0  tasks.o(.bss.xPendedTicks)
    xPendingReadyList                        0x20002ec8   Data          20  tasks.o(.bss.xPendingReadyList)
    [Anonymous Symbol]                       0x20002ec8   Section        0  tasks.o(.bss.xPendingReadyList)
    xSchedulerRunning                        0x20002edc   Data           4  tasks.o(.bss.xSchedulerRunning)
    [Anonymous Symbol]                       0x20002edc   Section        0  tasks.o(.bss.xSchedulerRunning)
    xStart                                   0x20002ee0   Data           8  heap_4.o(.bss.xStart)
    [Anonymous Symbol]                       0x20002ee0   Section        0  heap_4.o(.bss.xStart)
    xSuspendedTaskList                       0x20002ee8   Data          20  tasks.o(.bss.xSuspendedTaskList)
    [Anonymous Symbol]                       0x20002ee8   Section        0  tasks.o(.bss.xSuspendedTaskList)
    xTasksWaitingTermination                 0x20002efc   Data          20  tasks.o(.bss.xTasksWaitingTermination)
    [Anonymous Symbol]                       0x20002efc   Section        0  tasks.o(.bss.xTasksWaitingTermination)
    xTickCount                               0x20002f10   Data           4  tasks.o(.bss.xTickCount)
    [Anonymous Symbol]                       0x20002f10   Section        0  tasks.o(.bss.xTickCount)
    xTimerQueue                              0x20002f14   Data           4  timers.o(.bss.xTimerQueue)
    [Anonymous Symbol]                       0x20002f14   Section        0  timers.o(.bss.xTimerQueue)
    xTimerTaskHandle                         0x20002f18   Data           4  timers.o(.bss.xTimerTaskHandle)
    [Anonymous Symbol]                       0x20002f18   Section        0  timers.o(.bss.xTimerTaskHandle)
    xYieldPending                            0x20002f1c   Data           4  tasks.o(.bss.xYieldPending)
    [Anonymous Symbol]                       0x20002f1c   Section        0  tasks.o(.bss.xYieldPending)
    STACK                                    0x20002f20   Section     2048  startup_tm4c123.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$E$P$D$K$B$S$7EM$VFPi3$EXTD16$VFPS$VFMA$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OSPACE$ROPI$EBA8$MICROLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __Vectors                                0x00000000   Data           4  startup_tm4c123.o(RESET)
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    __decompress                              - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _microlib_exit                            - Undefined Weak Reference
    __Vectors_End                            0x0000026c   Data           0  startup_tm4c123.o(RESET)
    __Vectors_Size                           0x0000026c   Number         0  startup_tm4c123.o ABSOLUTE
    __main                                   0x0000026d   Thumb Code     0  entry.o(.ARM.Collect$$$$00000000)
    _main_stk                                0x0000026d   Thumb Code     0  entry2.o(.ARM.Collect$$$$00000001)
    _main_scatterload                        0x00000271   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    __main_after_scatterload                 0x00000275   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    _main_clock                              0x00000275   Thumb Code     0  entry7b.o(.ARM.Collect$$$$00000008)
    _main_cpp_init                           0x00000275   Thumb Code     0  entry8b.o(.ARM.Collect$$$$0000000A)
    _main_init                               0x00000275   Thumb Code     0  entry9a.o(.ARM.Collect$$$$0000000B)
    __rt_final_cpp                           0x0000027d   Thumb Code     0  entry10a.o(.ARM.Collect$$$$0000000D)
    __rt_final_exit                          0x0000027d   Thumb Code     0  entry11a.o(.ARM.Collect$$$$0000000F)
    Reset_Handler                            0x00000281   Thumb Code     8  startup_tm4c123.o(.text)
    NMI_Handler                              0x00000289   Thumb Code     2  startup_tm4c123.o(.text)
    HardFault_Handler                        0x0000028b   Thumb Code     2  startup_tm4c123.o(.text)
    MemManage_Handler                        0x0000028d   Thumb Code     2  startup_tm4c123.o(.text)
    BusFault_Handler                         0x0000028f   Thumb Code     2  startup_tm4c123.o(.text)
    UsageFault_Handler                       0x00000291   Thumb Code     2  startup_tm4c123.o(.text)
    DebugMon_Handler                         0x00000295   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOA_Handler                            0x0000029b   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOB_Handler                            0x0000029d   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOC_Handler                            0x0000029f   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOD_Handler                            0x000002a1   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOE_Handler                            0x000002a3   Thumb Code     2  startup_tm4c123.o(.text)
    UART1_Handler                            0x000002a7   Thumb Code     2  startup_tm4c123.o(.text)
    SSI0_Handler                             0x000002a9   Thumb Code     2  startup_tm4c123.o(.text)
    I2C0_Handler                             0x000002ab   Thumb Code     2  startup_tm4c123.o(.text)
    PMW0_FAULT_Handler                       0x000002ad   Thumb Code     2  startup_tm4c123.o(.text)
    PWM0_0_Handler                           0x000002af   Thumb Code     2  startup_tm4c123.o(.text)
    PWM0_1_Handler                           0x000002b1   Thumb Code     2  startup_tm4c123.o(.text)
    PWM0_2_Handler                           0x000002b3   Thumb Code     2  startup_tm4c123.o(.text)
    QEI0_Handler                             0x000002b5   Thumb Code     2  startup_tm4c123.o(.text)
    ADC0SS0_Handler                          0x000002b7   Thumb Code     2  startup_tm4c123.o(.text)
    ADC0SS1_Handler                          0x000002b9   Thumb Code     2  startup_tm4c123.o(.text)
    ADC0SS2_Handler                          0x000002bb   Thumb Code     2  startup_tm4c123.o(.text)
    ADC0SS3_Handler                          0x000002bd   Thumb Code     2  startup_tm4c123.o(.text)
    WDT0_Handler                             0x000002bf   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER0A_Handler                          0x000002c1   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER0B_Handler                          0x000002c3   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER1A_Handler                          0x000002c5   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER1B_Handler                          0x000002c7   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER2A_Handler                          0x000002c9   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER2B_Handler                          0x000002cb   Thumb Code     2  startup_tm4c123.o(.text)
    COMP0_Handler                            0x000002cd   Thumb Code     2  startup_tm4c123.o(.text)
    COMP1_Handler                            0x000002cf   Thumb Code     2  startup_tm4c123.o(.text)
    COMP2_Handler                            0x000002d1   Thumb Code     2  startup_tm4c123.o(.text)
    SYSCTL_Handler                           0x000002d3   Thumb Code     2  startup_tm4c123.o(.text)
    FLASH_Handler                            0x000002d5   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOF_Handler                            0x000002d7   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOG_Handler                            0x000002d9   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOH_Handler                            0x000002db   Thumb Code     2  startup_tm4c123.o(.text)
    UART2_Handler                            0x000002dd   Thumb Code     2  startup_tm4c123.o(.text)
    SSI1_Handler                             0x000002df   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER3A_Handler                          0x000002e1   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER3B_Handler                          0x000002e3   Thumb Code     2  startup_tm4c123.o(.text)
    I2C1_Handler                             0x000002e5   Thumb Code     2  startup_tm4c123.o(.text)
    QEI1_Handler                             0x000002e7   Thumb Code     2  startup_tm4c123.o(.text)
    CAN0_Handler                             0x000002e9   Thumb Code     2  startup_tm4c123.o(.text)
    CAN1_Handler                             0x000002eb   Thumb Code     2  startup_tm4c123.o(.text)
    CAN2_Handler                             0x000002ed   Thumb Code     2  startup_tm4c123.o(.text)
    HIB_Handler                              0x000002ef   Thumb Code     2  startup_tm4c123.o(.text)
    USB0_Handler                             0x000002f1   Thumb Code     2  startup_tm4c123.o(.text)
    PWM0_3_Handler                           0x000002f3   Thumb Code     2  startup_tm4c123.o(.text)
    UDMA_Handler                             0x000002f5   Thumb Code     2  startup_tm4c123.o(.text)
    UDMAERR_Handler                          0x000002f7   Thumb Code     2  startup_tm4c123.o(.text)
    ADC1SS0_Handler                          0x000002f9   Thumb Code     2  startup_tm4c123.o(.text)
    ADC1SS1_Handler                          0x000002fb   Thumb Code     2  startup_tm4c123.o(.text)
    ADC1SS2_Handler                          0x000002fd   Thumb Code     2  startup_tm4c123.o(.text)
    ADC1SS3_Handler                          0x000002ff   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOJ_Handler                            0x00000301   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOK_Handler                            0x00000303   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOL_Handler                            0x00000305   Thumb Code     2  startup_tm4c123.o(.text)
    SSI2_Handler                             0x00000307   Thumb Code     2  startup_tm4c123.o(.text)
    SSI3_Handler                             0x00000309   Thumb Code     2  startup_tm4c123.o(.text)
    UART3_Handler                            0x0000030b   Thumb Code     2  startup_tm4c123.o(.text)
    UART4_Handler                            0x0000030d   Thumb Code     2  startup_tm4c123.o(.text)
    UART5_Handler                            0x0000030f   Thumb Code     2  startup_tm4c123.o(.text)
    UART6_Handler                            0x00000311   Thumb Code     2  startup_tm4c123.o(.text)
    UART7_Handler                            0x00000313   Thumb Code     2  startup_tm4c123.o(.text)
    I2C2_Handler                             0x00000315   Thumb Code     2  startup_tm4c123.o(.text)
    I2C3_Handler                             0x00000317   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER4A_Handler                          0x00000319   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER4B_Handler                          0x0000031b   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER5A_Handler                          0x0000031d   Thumb Code     2  startup_tm4c123.o(.text)
    TIMER5B_Handler                          0x0000031f   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER0A_Handler                         0x00000321   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER0B_Handler                         0x00000323   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER1A_Handler                         0x00000325   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER1B_Handler                         0x00000327   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER2A_Handler                         0x00000329   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER2B_Handler                         0x0000032b   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER3A_Handler                         0x0000032d   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER3B_Handler                         0x0000032f   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER4A_Handler                         0x00000331   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER4B_Handler                         0x00000333   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER5A_Handler                         0x00000335   Thumb Code     2  startup_tm4c123.o(.text)
    WTIMER5B_Handler                         0x00000337   Thumb Code     2  startup_tm4c123.o(.text)
    FPU_Handler                              0x00000339   Thumb Code     2  startup_tm4c123.o(.text)
    I2C4_Handler                             0x0000033b   Thumb Code     2  startup_tm4c123.o(.text)
    I2C5_Handler                             0x0000033d   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOM_Handler                            0x0000033f   Thumb Code     2  startup_tm4c123.o(.text)
    GPION_Handler                            0x00000341   Thumb Code     2  startup_tm4c123.o(.text)
    QEI2_Handler                             0x00000343   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP0_Handler                           0x00000345   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP1_Handler                           0x00000347   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP2_Handler                           0x00000349   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP3_Handler                           0x0000034b   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP4_Handler                           0x0000034d   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP5_Handler                           0x0000034f   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP6_Handler                           0x00000351   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOP7_Handler                           0x00000353   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ0_Handler                           0x00000355   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ1_Handler                           0x00000357   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ2_Handler                           0x00000359   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ3_Handler                           0x0000035b   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ4_Handler                           0x0000035d   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ5_Handler                           0x0000035f   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ6_Handler                           0x00000361   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOQ7_Handler                           0x00000363   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOR_Handler                            0x00000365   Thumb Code     2  startup_tm4c123.o(.text)
    GPIOS_Handler                            0x00000367   Thumb Code     2  startup_tm4c123.o(.text)
    PMW1_0_Handler                           0x00000369   Thumb Code     2  startup_tm4c123.o(.text)
    PWM1_1_Handler                           0x0000036b   Thumb Code     2  startup_tm4c123.o(.text)
    PWM1_2_Handler                           0x0000036d   Thumb Code     2  startup_tm4c123.o(.text)
    PWM1_3_Handler                           0x0000036f   Thumb Code     2  startup_tm4c123.o(.text)
    PWM1_FAULT_Handler                       0x00000371   Thumb Code     2  startup_tm4c123.o(.text)
    __aeabi_ldivmod                          0x0000037d   Thumb Code    98  ldiv.o(.text)
    rand                                     0x000003e1   Thumb Code    20  rand.o(.text)
    srand                                    0x000003f5   Thumb Code     6  rand.o(.text)
    __aeabi_memcpy                           0x00000405   Thumb Code    36  memcpya.o(.text)
    __aeabi_memcpy4                          0x00000405   Thumb Code     0  memcpya.o(.text)
    __aeabi_memcpy8                          0x00000405   Thumb Code     0  memcpya.o(.text)
    __aeabi_dadd                             0x00000429   Thumb Code   322  dadd.o(.text)
    __aeabi_dsub                             0x0000056b   Thumb Code     6  dadd.o(.text)
    __aeabi_drsub                            0x00000571   Thumb Code     6  dadd.o(.text)
    __aeabi_dmul                             0x00000577   Thumb Code   228  dmul.o(.text)
    __aeabi_ui2d                             0x0000065b   Thumb Code    26  dfltui.o(.text)
    __aeabi_d2uiz                            0x00000675   Thumb Code    50  dfixui.o(.text)
    __aeabi_uldivmod                         0x000006a7   Thumb Code    98  uldiv.o(.text)
    __aeabi_llsl                             0x00000709   Thumb Code    30  llshl.o(.text)
    _ll_shift_l                              0x00000709   Thumb Code     0  llshl.o(.text)
    __aeabi_llsr                             0x00000727   Thumb Code    32  llushr.o(.text)
    _ll_ushift_r                             0x00000727   Thumb Code     0  llushr.o(.text)
    __aeabi_lasr                             0x00000747   Thumb Code    36  llsshr.o(.text)
    _ll_sshift_r                             0x00000747   Thumb Code     0  llsshr.o(.text)
    __I$use$fp                               0x0000076b   Thumb Code     0  iusefp.o(.text)
    _double_round                            0x0000076b   Thumb Code    30  depilogue.o(.text)
    _double_epilogue                         0x00000789   Thumb Code   156  depilogue.o(.text)
    __scatterload                            0x00000825   Thumb Code    28  init.o(.text)
    __scatterload_rt2                        0x00000825   Thumb Code     0  init.o(.text)
    PendSV_Handler                           0x00000851   Thumb Code   100  port.o(.text.PendSV_Handler)
    SVC_Handler                              0x000008c1   Thumb Code    36  port.o(.text.SVC_Handler)
    SysTick_Handler                          0x000008e5   Thumb Code    60  port.o(.text.SysTick_Handler)
    SystemInit                               0x00000921   Thumb Code   268  system_tm4c123.o(.text.SystemInit)
    Task_GamePrint                           0x00000a2d   Thumb Code    56  gametasks.o(.text.Task_GamePrint)
    Task_GameUpdate                          0x00000a65   Thumb Code   124  gametasks.o(.text.Task_GameUpdate)
    Task_UpdateTime                          0x00000ae1   Thumb Code    70  gametasks.o(.text.Task_UpdateTime)
    UART0_GetReceivedChar                    0x00000b29   Thumb Code    14  uart.o(.text.UART0_GetReceivedChar)
    UART0_Handler                            0x00000b39   Thumb Code    78  gametasks.o(.text.UART0_Handler)
    UART0_HandlerTask                        0x00000b89   Thumb Code   208  gametasks.o(.text.UART0_HandlerTask)
    UART0_Print                              0x00000c59   Thumb Code    54  uart.o(.text.UART0_Print)
    UART0_PrintDecimal                       0x00000c91   Thumb Code   214  uart.o(.text.UART0_PrintDecimal)
    UART0_SendChar                           0x00000d69   Thumb Code    46  uart.o(.text.UART0_SendChar)
    UART0_init                               0x00000d99   Thumb Code   392  uart.o(.text.UART0_init)
    beginGame                                0x00000fd5   Thumb Code   280  game.o(.text.beginGame)
    gameInit                                 0x000010ed   Thumb Code   278  game.o(.text.gameInit)
    gamePrint                                0x00001205   Thumb Code  1040  game.o(.text.gamePrint)
    gameUpdate                               0x00001615   Thumb Code  1384  game.o(.text.gameUpdate)
    loseGame                                 0x00001b7d   Thumb Code    46  game.o(.text.loseGame)
    main                                     0x00001bad   Thumb Code   170  main.o(.text.main)
    pvPortMalloc                             0x00002a81   Thumb Code   434  heap_4.o(.text.pvPortMalloc)
    pvTaskIncrementMutexHeldCount            0x00002c35   Thumb Code    44  tasks.o(.text.pvTaskIncrementMutexHeldCount)
    pxPortInitialiseStack                    0x00002c61   Thumb Code    94  port.o(.text.pxPortInitialiseStack)
    uxListRemove                             0x00002cc1   Thumb Code    72  list.o(.text.uxListRemove)
    vListInitialise                          0x00002d09   Thumb Code    46  list.o(.text.vListInitialise)
    vListInitialiseItem                      0x00002d39   Thumb Code    14  list.o(.text.vListInitialiseItem)
    vListInsert                              0x00002d49   Thumb Code   106  list.o(.text.vListInsert)
    vPortEnterCritical                       0x00002dc9   Thumb Code    48  port.o(.text.vPortEnterCritical)
    vPortExitCritical                        0x00002df9   Thumb Code    38  port.o(.text.vPortExitCritical)
    vPortFree                                0x00002e21   Thumb Code   132  heap_4.o(.text.vPortFree)
    vPortSetupTimerInterrupt                 0x00002ea5   Thumb Code    68  port.o(.text.vPortSetupTimerInterrupt)
    vQueueWaitForMessageRestricted           0x00002ee9   Thumb Code   100  queue.o(.text.vQueueWaitForMessageRestricted)
    vTaskInternalSetTimeOutState             0x00002f4d   Thumb Code    36  tasks.o(.text.vTaskInternalSetTimeOutState)
    vTaskMissedYield                         0x00002f71   Thumb Code    14  tasks.o(.text.vTaskMissedYield)
    vTaskPlaceOnEventList                    0x00002f81   Thumb Code    38  tasks.o(.text.vTaskPlaceOnEventList)
    vTaskPlaceOnEventListRestricted          0x00002fa9   Thumb Code    96  tasks.o(.text.vTaskPlaceOnEventListRestricted)
    vTaskPriorityDisinheritAfterTimeout      0x00003009   Thumb Code   312  tasks.o(.text.vTaskPriorityDisinheritAfterTimeout)
    vTaskStartScheduler                      0x00003141   Thumb Code   156  tasks.o(.text.vTaskStartScheduler)
    vTaskSuspendAll                          0x000031dd   Thumb Code    16  tasks.o(.text.vTaskSuspendAll)
    vTaskSwitchContext                       0x000031ed   Thumb Code   146  tasks.o(.text.vTaskSwitchContext)
    winGame                                  0x00003281   Thumb Code    40  game.o(.text.winGame)
    xPortStartScheduler                      0x000032a9   Thumb Code    84  port.o(.text.xPortStartScheduler)
    xQueueCreateMutex                        0x000032fd   Thumb Code    38  queue.o(.text.xQueueCreateMutex)
    xQueueGenericCreate                      0x00003325   Thumb Code   126  queue.o(.text.xQueueGenericCreate)
    xQueueGenericReset                       0x000033a5   Thumb Code   208  queue.o(.text.xQueueGenericReset)
    xQueueGenericSend                        0x00003475   Thumb Code   434  queue.o(.text.xQueueGenericSend)
    xQueueGiveFromISR                        0x00003629   Thumb Code   216  queue.o(.text.xQueueGiveFromISR)
    xQueueReceive                            0x00003701   Thumb Code   338  queue.o(.text.xQueueReceive)
    xQueueSemaphoreTake                      0x00003855   Thumb Code   414  queue.o(.text.xQueueSemaphoreTake)
    xTaskCheckForTimeOut                     0x000039f5   Thumb Code   154  tasks.o(.text.xTaskCheckForTimeOut)
    xTaskCreate                              0x00003a91   Thumb Code   152  tasks.o(.text.xTaskCreate)
    xTaskDelayUntil                          0x00003b29   Thumb Code   186  tasks.o(.text.xTaskDelayUntil)
    xTaskGetTickCount                        0x00003be5   Thumb Code    20  tasks.o(.text.xTaskGetTickCount)
    xTaskIncrementTick                       0x00003bf9   Thumb Code   570  tasks.o(.text.xTaskIncrementTick)
    xTaskPriorityDisinherit                  0x00003e35   Thumb Code   240  tasks.o(.text.xTaskPriorityDisinherit)
    xTaskPriorityInherit                     0x00003f25   Thumb Code   348  tasks.o(.text.xTaskPriorityInherit)
    xTaskRemoveFromEventList                 0x00004081   Thumb Code   368  tasks.o(.text.xTaskRemoveFromEventList)
    xTaskResumeAll                           0x000041f1   Thumb Code   510  tasks.o(.text.xTaskResumeAll)
    xTimerCreateTimerTask                    0x000043f1   Thumb Code    80  timers.o(.text.xTimerCreateTimerTask)
    __scatterload_copy                       0x00004441   Thumb Code    14  handlers.o(i.__scatterload_copy)
    __scatterload_null                       0x0000444f   Thumb Code     2  handlers.o(i.__scatterload_null)
    __scatterload_zeroinit                   0x00004451   Thumb Code    14  handlers.o(i.__scatterload_zeroinit)
    uxTopUsedPriority                        0x00004704   Data           4  tasks.o(.rodata.uxTopUsedPriority)
    Region$$Table$$Base                      0x00004708   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x00004728   Number         0  anon$$obj.o(Region$$Table)
    SystemCoreClock                          0x20000004   Data           4  system_tm4c123.o(.data.SystemCoreClock)
    UART0_BinarySemaphore                    0x20000010   Data           4  game.o(.bss.UART0_BinarySemaphore)
    board                                    0x20000014   Data        3444  game.o(.bss.board)
    currentCmd                               0x20000d88   Data           1  game.o(.bss.currentCmd)
    gameData_Mutex                           0x20000d8c   Data           4  game.o(.bss.gameData_Mutex)
    headIndex                                0x20000d90   Data           4  game.o(.bss.headIndex)
    headX                                    0x20000d94   Data           4  game.o(.bss.headX)
    headY                                    0x20000d98   Data           4  game.o(.bss.headY)
    initialGame                              0x20000d9c   Data           1  game.o(.bss.initialGame)
    isPlaying                                0x20000d9d   Data           1  game.o(.bss.isPlaying)
    level                                    0x20000da0   Data           4  game.o(.bss.level)
    powerUp                                  0x20000da4   Data           1  game.o(.bss.powerUp)
    prevCmd                                  0x20000da5   Data           1  game.o(.bss.prevCmd)
    pxCurrentTCB                             0x20000dac   Data           4  tasks.o(.bss.pxCurrentTCB)
    score                                    0x20000e28   Data           4  game.o(.bss.score)
    shouldPrint_BinarySemaphore              0x20000e2c   Data           4  game.o(.bss.shouldPrint_BinarySemaphore)
    shouldUpdate_BinarySemaphore             0x20000e30   Data           4  game.o(.bss.shouldUpdate_BinarySemaphore)
    tailIndex                                0x20000e34   Data           4  game.o(.bss.tailIndex)
    timeElapsed                              0x20000e38   Data           4  game.o(.bss.timeElapsed)
    win                                      0x20002e50   Data           1  game.o(.bss.win)
    __initial_sp                             0x20003720   Data           0  startup_tm4c123.o(STACK)



==============================================================================

Memory Map of the image

  Image Entry point : 0x0000026d

  Load Region LR_IROM1 (Base: 0x00000000, Size: 0x00004738, Max: 0x00040000, ABSOLUTE)

    Execution Region ER_IROM1 (Exec base: 0x00000000, Load base: 0x00000000, Size: 0x00004728, Max: 0x00040000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000000   0x00000000   0x0000026c   Data   RO          455    RESET               startup_tm4c123.o
    0x0000026c   0x0000026c   0x00000000   Code   RO          476  * .ARM.Collect$$$$00000000  mc_w.l(entry.o)
    0x0000026c   0x0000026c   0x00000004   Code   RO          496    .ARM.Collect$$$$00000001  mc_w.l(entry2.o)
    0x00000270   0x00000270   0x00000004   Code   RO          499    .ARM.Collect$$$$00000004  mc_w.l(entry5.o)
    0x00000274   0x00000274   0x00000000   Code   RO          501    .ARM.Collect$$$$00000008  mc_w.l(entry7b.o)
    0x00000274   0x00000274   0x00000000   Code   RO          503    .ARM.Collect$$$$0000000A  mc_w.l(entry8b.o)
    0x00000274   0x00000274   0x00000008   Code   RO          504    .ARM.Collect$$$$0000000B  mc_w.l(entry9a.o)
    0x0000027c   0x0000027c   0x00000000   Code   RO          506    .ARM.Collect$$$$0000000D  mc_w.l(entry10a.o)
    0x0000027c   0x0000027c   0x00000000   Code   RO          508    .ARM.Collect$$$$0000000F  mc_w.l(entry11a.o)
    0x0000027c   0x0000027c   0x00000004   Code   RO          497    .ARM.Collect$$$$00002712  mc_w.l(entry2.o)
    0x00000280   0x00000280   0x000000fc   Code   RO          456    .text               startup_tm4c123.o
    0x0000037c   0x0000037c   0x00000062   Code   RO          479    .text               mc_w.l(ldiv.o)
    0x000003de   0x000003de   0x00000002   PAD
    0x000003e0   0x000003e0   0x00000024   Code   RO          481    .text               mc_w.l(rand.o)
    0x00000404   0x00000404   0x00000024   Code   RO          484    .text               mc_w.l(memcpya.o)
    0x00000428   0x00000428   0x0000014e   Code   RO          488    .text               mf_w.l(dadd.o)
    0x00000576   0x00000576   0x000000e4   Code   RO          490    .text               mf_w.l(dmul.o)
    0x0000065a   0x0000065a   0x0000001a   Code   RO          492    .text               mf_w.l(dfltui.o)
    0x00000674   0x00000674   0x00000032   Code   RO          494    .text               mf_w.l(dfixui.o)
    0x000006a6   0x000006a6   0x00000062   Code   RO          510    .text               mc_w.l(uldiv.o)
    0x00000708   0x00000708   0x0000001e   Code   RO          512    .text               mc_w.l(llshl.o)
    0x00000726   0x00000726   0x00000020   Code   RO          514    .text               mc_w.l(llushr.o)
    0x00000746   0x00000746   0x00000024   Code   RO          516    .text               mc_w.l(llsshr.o)
    0x0000076a   0x0000076a   0x00000000   Code   RO          518    .text               mc_w.l(iusefp.o)
    0x0000076a   0x0000076a   0x000000ba   Code   RO          519    .text               mf_w.l(depilogue.o)
    0x00000824   0x00000824   0x00000024   Code   RO          521    .text               mc_w.l(init.o)
    0x00000848   0x00000848   0x00000008   PAD
    0x00000850   0x00000850   0x00000064   Code   RO          254    .text.PendSV_Handler  port.o
    0x000008b4   0x000008b4   0x0000000c   PAD
    0x000008c0   0x000008c0   0x00000024   Code   RO          238    .text.SVC_Handler   port.o
    0x000008e4   0x000008e4   0x0000003c   Code   RO          256    .text.SysTick_Handler  port.o
    0x00000920   0x00000920   0x0000010c   Code   RO          467    .text.SystemInit    system_tm4c123.o
    0x00000a2c   0x00000a2c   0x00000038   Code   RO          438    .text.Task_GamePrint  gametasks.o
    0x00000a64   0x00000a64   0x0000007c   Code   RO          440    .text.Task_GameUpdate  gametasks.o
    0x00000ae0   0x00000ae0   0x00000046   Code   RO          442    .text.Task_UpdateTime  gametasks.o
    0x00000b26   0x00000b26   0x00000002   PAD
    0x00000b28   0x00000b28   0x0000000e   Code   RO          427    .text.UART0_GetReceivedChar  uart.o
    0x00000b36   0x00000b36   0x00000002   PAD
    0x00000b38   0x00000b38   0x0000004e   Code   RO          444    .text.UART0_Handler  gametasks.o
    0x00000b86   0x00000b86   0x00000002   PAD
    0x00000b88   0x00000b88   0x000000d0   Code   RO          436    .text.UART0_HandlerTask  gametasks.o
    0x00000c58   0x00000c58   0x00000036   Code   RO          423    .text.UART0_Print   uart.o
    0x00000c8e   0x00000c8e   0x00000002   PAD
    0x00000c90   0x00000c90   0x000000d6   Code   RO          425    .text.UART0_PrintDecimal  uart.o
    0x00000d66   0x00000d66   0x00000002   PAD
    0x00000d68   0x00000d68   0x0000002e   Code   RO          421    .text.UART0_SendChar  uart.o
    0x00000d96   0x00000d96   0x00000002   PAD
    0x00000d98   0x00000d98   0x00000188   Code   RO          415    .text.UART0_init    uart.o
    0x00000f20   0x00000f20   0x00000030   Code   RO          419    .text.__NVIC_EnableIRQ  uart.o
    0x00000f50   0x00000f50   0x00000042   Code   RO          417    .text.__NVIC_SetPriority  uart.o
    0x00000f92   0x00000f92   0x00000002   PAD
    0x00000f94   0x00000f94   0x00000040   Code   RO          383    .text.absolute      game.o
    0x00000fd4   0x00000fd4   0x00000118   Code   RO          377    .text.beginGame     game.o
    0x000010ec   0x000010ec   0x00000116   Code   RO          375    .text.gameInit      game.o
    0x00001202   0x00001202   0x00000002   PAD
    0x00001204   0x00001204   0x00000410   Code   RO          379    .text.gamePrint     game.o
    0x00001614   0x00001614   0x00000568   Code   RO          381    .text.gameUpdate    game.o
    0x00001b7c   0x00001b7c   0x0000002e   Code   RO          385    .text.loseGame      game.o
    0x00001baa   0x00001baa   0x00000002   PAD
    0x00001bac   0x00001bac   0x000000aa   Code   RO          358    .text.main          main.o
    0x00001c56   0x00001c56   0x00000002   PAD
    0x00001c58   0x00001c58   0x0000011a   Code   RO           95    .text.prvAddCurrentTaskToDelayedList  tasks.o
    0x00001d72   0x00001d72   0x00000002   PAD
    0x00001d74   0x00001d74   0x0000014e   Code   RO           83    .text.prvAddNewTaskToReadyList  tasks.o
    0x00001ec2   0x00001ec2   0x00000002   PAD
    0x00001ec4   0x00001ec4   0x0000006a   Code   RO          268    .text.prvCheckForValidListAndQueue  timers.o
    0x00001f2e   0x00001f2e   0x00000002   PAD
    0x00001f30   0x00001f30   0x0000005a   Code   RO          185    .text.prvCheckTasksWaitingTermination  tasks.o
    0x00001f8a   0x00001f8a   0x00000002   PAD
    0x00001f8c   0x00001f8c   0x00000042   Code   RO           36    .text.prvCopyDataFromQueue  queue.o
    0x00001fce   0x00001fce   0x00000002   PAD
    0x00001fd0   0x00001fd0   0x000000cc   Code   RO           22    .text.prvCopyDataToQueue  queue.o
    0x0000209c   0x0000209c   0x00000018   Code   RO           89    .text.prvDeleteTCB  tasks.o
    0x000020b4   0x000020b4   0x00000026   Code   RO           40    .text.prvGetDisinheritPriorityAfterTimeout  queue.o
    0x000020da   0x000020da   0x00000002   PAD
    0x000020dc   0x000020dc   0x00000040   Code   RO          296    .text.prvGetNextExpireTime  timers.o
    0x0000211c   0x0000211c   0x000000bc   Code   RO          329    .text.prvHeapInit   heap_4.o
    0x000021d8   0x000021d8   0x00000038   Code   RO          121    .text.prvIdleTask   tasks.o
    0x00002210   0x00002210   0x0000002c   Code   RO           10    .text.prvInitialiseMutex  queue.o
    0x0000223c   0x0000223c   0x00000044   Code   RO            6    .text.prvInitialiseNewQueue  queue.o
    0x00002280   0x00002280   0x000000f4   Code   RO           81    .text.prvInitialiseNewTask  tasks.o
    0x00002374   0x00002374   0x0000008e   Code   RO          183    .text.prvInitialiseTaskLists  tasks.o
    0x00002402   0x00002402   0x00000002   PAD
    0x00002404   0x00002404   0x000000c6   Code   RO          331    .text.prvInsertBlockIntoFreeList  heap_4.o
    0x000024ca   0x000024ca   0x00000002   PAD
    0x000024cc   0x000024cc   0x00000086   Code   RO          310    .text.prvInsertTimerInActiveList  timers.o
    0x00002552   0x00002552   0x00000002   PAD
    0x00002554   0x00002554   0x00000028   Code   RO           38    .text.prvIsQueueEmpty  queue.o
    0x0000257c   0x0000257c   0x0000002e   Code   RO           26    .text.prvIsQueueFull  queue.o
    0x000025aa   0x000025aa   0x00000002   PAD
    0x000025ac   0x000025ac   0x00000078   Code   RO           24    .text.prvNotifyQueueSetContainer  queue.o
    0x00002624   0x00002624   0x00000028   Code   RO          246    .text.prvPortStartFirstTask  port.o
    0x0000264c   0x0000264c   0x00000054   Code   RO          304    .text.prvProcessExpiredTimer  timers.o
    0x000026a0   0x000026a0   0x00000126   Code   RO          300    .text.prvProcessReceivedCommands  timers.o
    0x000027c6   0x000027c6   0x00000002   PAD
    0x000027c8   0x000027c8   0x0000009a   Code   RO          298    .text.prvProcessTimerOrBlockTask  timers.o
    0x00002862   0x00002862   0x00000002   PAD
    0x00002864   0x00002864   0x00000034   Code   RO          308    .text.prvReloadTimer  timers.o
    0x00002898   0x00002898   0x0000003c   Code   RO           87    .text.prvResetNextTaskUnblockTime  tasks.o
    0x000028d4   0x000028d4   0x00000044   Code   RO          302    .text.prvSampleTimeNow  timers.o
    0x00002918   0x00002918   0x00000052   Code   RO          306    .text.prvSwitchTimerLists  timers.o
    0x0000296a   0x0000296a   0x00000002   PAD
    0x0000296c   0x0000296c   0x00000026   Code   RO          236    .text.prvTaskExitError  port.o
    0x00002992   0x00002992   0x00000002   PAD
    0x00002994   0x00002994   0x0000001e   Code   RO          270    .text.prvTimerTask  timers.o
    0x000029b2   0x000029b2   0x00000002   PAD
    0x000029b4   0x000029b4   0x000000cc   Code   RO           28    .text.prvUnlockQueue  queue.o
    0x00002a80   0x00002a80   0x000001b2   Code   RO          327    .text.pvPortMalloc  heap_4.o
    0x00002c32   0x00002c32   0x00000002   PAD
    0x00002c34   0x00002c34   0x0000002c   Code   RO          167    .text.pvTaskIncrementMutexHeldCount  tasks.o
    0x00002c60   0x00002c60   0x0000005e   Code   RO          234    .text.pxPortInitialiseStack  port.o
    0x00002cbe   0x00002cbe   0x00000002   PAD
    0x00002cc0   0x00002cc0   0x00000048   Code   RO          225    .text.uxListRemove  list.o
    0x00002d08   0x00002d08   0x0000002e   Code   RO          217    .text.vListInitialise  list.o
    0x00002d36   0x00002d36   0x00000002   PAD
    0x00002d38   0x00002d38   0x0000000e   Code   RO          219    .text.vListInitialiseItem  list.o
    0x00002d46   0x00002d46   0x00000002   PAD
    0x00002d48   0x00002d48   0x0000006a   Code   RO          223    .text.vListInsert   list.o
    0x00002db2   0x00002db2   0x00000002   PAD
    0x00002db4   0x00002db4   0x00000014   Code   RO          244    .text.vPortEnableVFP  port.o
    0x00002dc8   0x00002dc8   0x00000030   Code   RO          250    .text.vPortEnterCritical  port.o
    0x00002df8   0x00002df8   0x00000026   Code   RO          252    .text.vPortExitCritical  port.o
    0x00002e1e   0x00002e1e   0x00000002   PAD
    0x00002e20   0x00002e20   0x00000084   Code   RO          333    .text.vPortFree     heap_4.o
    0x00002ea4   0x00002ea4   0x00000044   Code   RO          242    .text.vPortSetupTimerInterrupt  port.o
    0x00002ee8   0x00002ee8   0x00000064   Code   RO           60    .text.vQueueWaitForMessageRestricted  queue.o
    0x00002f4c   0x00002f4c   0x00000024   Code   RO          149    .text.vTaskInternalSetTimeOutState  tasks.o
    0x00002f70   0x00002f70   0x0000000e   Code   RO          153    .text.vTaskMissedYield  tasks.o
    0x00002f7e   0x00002f7e   0x00000002   PAD
    0x00002f80   0x00002f80   0x00000026   Code   RO          137    .text.vTaskPlaceOnEventList  tasks.o
    0x00002fa6   0x00002fa6   0x00000002   PAD
    0x00002fa8   0x00002fa8   0x00000060   Code   RO          141    .text.vTaskPlaceOnEventListRestricted  tasks.o
    0x00003008   0x00003008   0x00000138   Code   RO          163    .text.vTaskPriorityDisinheritAfterTimeout  tasks.o
    0x00003140   0x00003140   0x0000009c   Code   RO          119    .text.vTaskStartScheduler  tasks.o
    0x000031dc   0x000031dc   0x00000010   Code   RO           93    .text.vTaskSuspendAll  tasks.o
    0x000031ec   0x000031ec   0x00000092   Code   RO          111    .text.vTaskSwitchContext  tasks.o
    0x0000327e   0x0000327e   0x00000002   PAD
    0x00003280   0x00003280   0x00000028   Code   RO          387    .text.winGame       game.o
    0x000032a8   0x000032a8   0x00000054   Code   RO          240    .text.xPortStartScheduler  port.o
    0x000032fc   0x000032fc   0x00000026   Code   RO            8    .text.xQueueCreateMutex  queue.o
    0x00003322   0x00003322   0x00000002   PAD
    0x00003324   0x00003324   0x0000007e   Code   RO            4    .text.xQueueGenericCreate  queue.o
    0x000033a2   0x000033a2   0x00000002   PAD
    0x000033a4   0x000033a4   0x000000d0   Code   RO            2    .text.xQueueGenericReset  queue.o
    0x00003474   0x00003474   0x000001b2   Code   RO           14    .text.xQueueGenericSend  queue.o
    0x00003626   0x00003626   0x00000002   PAD
    0x00003628   0x00003628   0x000000d8   Code   RO           32    .text.xQueueGiveFromISR  queue.o
    0x00003700   0x00003700   0x00000152   Code   RO           34    .text.xQueueReceive  queue.o
    0x00003852   0x00003852   0x00000002   PAD
    0x00003854   0x00003854   0x0000019e   Code   RO           18    .text.xQueueSemaphoreTake  queue.o
    0x000039f2   0x000039f2   0x00000002   PAD
    0x000039f4   0x000039f4   0x0000009a   Code   RO          151    .text.xTaskCheckForTimeOut  tasks.o
    0x00003a8e   0x00003a8e   0x00000002   PAD
    0x00003a90   0x00003a90   0x00000098   Code   RO           79    .text.xTaskCreate   tasks.o
    0x00003b28   0x00003b28   0x000000ba   Code   RO           91    .text.xTaskDelayUntil  tasks.o
    0x00003be2   0x00003be2   0x00000002   PAD
    0x00003be4   0x00003be4   0x00000014   Code   RO          127    .text.xTaskGetTickCount  tasks.o
    0x00003bf8   0x00003bf8   0x0000023a   Code   RO          125    .text.xTaskIncrementTick  tasks.o
    0x00003e32   0x00003e32   0x00000002   PAD
    0x00003e34   0x00003e34   0x000000f0   Code   RO          161    .text.xTaskPriorityDisinherit  tasks.o
    0x00003f24   0x00003f24   0x0000015c   Code   RO          159    .text.xTaskPriorityInherit  tasks.o
    0x00004080   0x00004080   0x00000170   Code   RO          143    .text.xTaskRemoveFromEventList  tasks.o
    0x000041f0   0x000041f0   0x000001fe   Code   RO           97    .text.xTaskResumeAll  tasks.o
    0x000043ee   0x000043ee   0x00000002   PAD
    0x000043f0   0x000043f0   0x00000050   Code   RO          266    .text.xTimerCreateTimerTask  timers.o
    0x00004440   0x00004440   0x0000000e   Code   RO          525    i.__scatterload_copy  mc_w.l(handlers.o)
    0x0000444e   0x0000444e   0x00000002   Code   RO          526    i.__scatterload_null  mc_w.l(handlers.o)
    0x00004450   0x00004450   0x0000000e   Code   RO          527    i.__scatterload_zeroinit  mc_w.l(handlers.o)
    0x0000445e   0x0000445e   0x00000005   Data   RO          203    .rodata.str1.1      tasks.o
    0x00004463   0x00004463   0x00000008   Data   RO          313    .rodata.str1.1      timers.o
    0x0000446b   0x0000446b   0x0000002b   Data   RO          366    .rodata.str1.1      main.o
    0x00004496   0x00004496   0x00000266   Data   RO          398    .rodata.str1.1      game.o
    0x000046fc   0x000046fc   0x00000007   Data   RO          446    .rodata.str1.1      gametasks.o
    0x00004703   0x00004703   0x00000001   PAD
    0x00004704   0x00004704   0x00000004   Data   RO          188    .rodata.uxTopUsedPriority  tasks.o
    0x00004708   0x00004708   0x00000020   Data   RO          524    Region$$Table       anon$$obj.o


    Execution Region RW_IRAM1 (Exec base: 0x20000000, Load base: 0x00004728, Size: 0x00003720, Max: 0x00008000, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x20000000   0x00004728   0x00000004   Data   RW          482    .data               mc_w.l(rand.o)
    0x20000004   0x0000472c   0x00000004   Data   RW          469    .data.SystemCoreClock  system_tm4c123.o
    0x20000008   0x00004730   0x00000004   Data   RW          258    .data.uxCriticalNesting  port.o
    0x2000000c   0x00004734   0x00000004   PAD
    0x20000010        -       0x00000004   Zero   RW          389    .bss.UART0_BinarySemaphore  game.o
    0x20000014        -       0x00000d74   Zero   RW          400    .bss.board          game.o
    0x20000d88        -       0x00000001   Zero   RW          403    .bss.currentCmd     game.o
    0x20000d89   0x00004734   0x00000003   PAD
    0x20000d8c        -       0x00000004   Zero   RW          392    .bss.gameData_Mutex  game.o
    0x20000d90        -       0x00000004   Zero   RW          401    .bss.headIndex      game.o
    0x20000d94        -       0x00000004   Zero   RW          405    .bss.headX          game.o
    0x20000d98        -       0x00000004   Zero   RW          406    .bss.headY          game.o
    0x20000d9c        -       0x00000001   Zero   RW          393    .bss.initialGame    game.o
    0x20000d9d        -       0x00000001   Zero   RW          395    .bss.isPlaying      game.o
    0x20000d9e   0x00004734   0x00000002   PAD
    0x20000da0        -       0x00000004   Zero   RW          396    .bss.level          game.o
    0x20000da4        -       0x00000001   Zero   RW          402    .bss.powerUp        game.o
    0x20000da5        -       0x00000001   Zero   RW          404    .bss.prevCmd        game.o
    0x20000da6   0x00004734   0x00000002   PAD
    0x20000da8        -       0x00000004   Zero   RW          317    .bss.prvSampleTimeNow.xLastTime  timers.o
    0x20000dac        -       0x00000004   Zero   RW          187    .bss.pxCurrentTCB   tasks.o
    0x20000db0        -       0x00000004   Zero   RW          315    .bss.pxCurrentTimerList  timers.o
    0x20000db4        -       0x00000004   Zero   RW          197    .bss.pxDelayedTaskList  tasks.o
    0x20000db8        -       0x00000004   Zero   RW          343    .bss.pxEnd          heap_4.o
    0x20000dbc        -       0x00000004   Zero   RW          198    .bss.pxOverflowDelayedTaskList  tasks.o
    0x20000dc0        -       0x00000004   Zero   RW          316    .bss.pxOverflowTimerList  timers.o
    0x20000dc4        -       0x00000064   Zero   RW          189    .bss.pxReadyTasksLists  tasks.o
    0x20000e28        -       0x00000004   Zero   RW          394    .bss.score          game.o
    0x20000e2c        -       0x00000004   Zero   RW          390    .bss.shouldPrint_BinarySemaphore  game.o
    0x20000e30        -       0x00000004   Zero   RW          391    .bss.shouldUpdate_BinarySemaphore  game.o
    0x20000e34        -       0x00000004   Zero   RW          407    .bss.tailIndex      game.o
    0x20000e38        -       0x00000004   Zero   RW          397    .bss.timeElapsed    game.o
    0x20000e3c        -       0x00002000   Zero   RW          350    .bss.ucHeap         heap_4.o
    0x20002e3c        -       0x00000004   Zero   RW          194    .bss.uxCurrentNumberOfTasks  tasks.o
    0x20002e40        -       0x00000004   Zero   RW          193    .bss.uxDeletedTasksWaitingCleanUp  tasks.o
    0x20002e44        -       0x00000004   Zero   RW          200    .bss.uxSchedulerSuspended  tasks.o
    0x20002e48        -       0x00000004   Zero   RW          191    .bss.uxTaskNumber   tasks.o
    0x20002e4c        -       0x00000004   Zero   RW          190    .bss.uxTopReadyPriority  tasks.o
    0x20002e50        -       0x00000001   Zero   RW          399    .bss.win            game.o
    0x20002e51   0x00004734   0x00000003   PAD
    0x20002e54        -       0x00000014   Zero   RW          318    .bss.xActiveTimerList1  timers.o
    0x20002e68        -       0x00000014   Zero   RW          319    .bss.xActiveTimerList2  timers.o
    0x20002e7c        -       0x00000004   Zero   RW          344    .bss.xBlockAllocatedBit  heap_4.o
    0x20002e80        -       0x00000014   Zero   RW          208    .bss.xDelayedTaskList1  tasks.o
    0x20002e94        -       0x00000014   Zero   RW          209    .bss.xDelayedTaskList2  tasks.o
    0x20002ea8        -       0x00000004   Zero   RW          345    .bss.xFreeBytesRemaining  heap_4.o
    0x20002eac        -       0x00000004   Zero   RW          204    .bss.xIdleTaskHandle  tasks.o
    0x20002eb0        -       0x00000004   Zero   RW          347    .bss.xMinimumEverFreeBytesRemaining  heap_4.o
    0x20002eb4        -       0x00000004   Zero   RW          205    .bss.xNextTaskUnblockTime  tasks.o
    0x20002eb8        -       0x00000004   Zero   RW          207    .bss.xNumOfOverflows  tasks.o
    0x20002ebc        -       0x00000004   Zero   RW          348    .bss.xNumberOfSuccessfulAllocations  heap_4.o
    0x20002ec0        -       0x00000004   Zero   RW          349    .bss.xNumberOfSuccessfulFrees  heap_4.o
    0x20002ec4        -       0x00000004   Zero   RW          206    .bss.xPendedTicks   tasks.o
    0x20002ec8        -       0x00000014   Zero   RW          202    .bss.xPendingReadyList  tasks.o
    0x20002edc        -       0x00000004   Zero   RW          195    .bss.xSchedulerRunning  tasks.o
    0x20002ee0        -       0x00000008   Zero   RW          346    .bss.xStart         heap_4.o
    0x20002ee8        -       0x00000014   Zero   RW          199    .bss.xSuspendedTaskList  tasks.o
    0x20002efc        -       0x00000014   Zero   RW          192    .bss.xTasksWaitingTermination  tasks.o
    0x20002f10        -       0x00000004   Zero   RW          196    .bss.xTickCount     tasks.o
    0x20002f14        -       0x00000004   Zero   RW          312    .bss.xTimerQueue    timers.o
    0x20002f18        -       0x00000004   Zero   RW          314    .bss.xTimerTaskHandle  timers.o
    0x20002f1c        -       0x00000004   Zero   RW          201    .bss.xYieldPending  tasks.o
    0x20002f20        -       0x00000800   Zero   RW          453    STACK               startup_tm4c123.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

      3132          0        614          0       3494       3976   game.o
       536          0          7          0          0       2290   gametasks.o
       952          0          0          0       8224       3952   heap_4.o
       238          0          0          0          0       2083   list.o
       170          0         43          0          0        912   main.o
       626         16          0          4          0       2670   port.o
      2704          0          0          0          0      13414   queue.o
       252         10        620          0       2048       5468   startup_tm4c123.o
       268          0          0          4          0       6627   system_tm4c123.o
      4638          0          9          0        260      19637   tasks.o
      1148         10          8          0         60       7301   timers.o
       834         16          0          0          0       9901   uart.o

    ----------------------------------------------------------------------
     15596         64       1334          8      14100      78231   Object Totals
         0          0         32          0          0          0   (incl. Generated)
        98         12          1          0         14          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

         0          0          0          0          0          0   entry.o
         0          0          0          0          0          0   entry10a.o
         0          0          0          0          0          0   entry11a.o
         8          4          0          0          0          0   entry2.o
         4          0          0          0          0          0   entry5.o
         0          0          0          0          0          0   entry7b.o
         0          0          0          0          0          0   entry8b.o
         8          4          0          0          0          0   entry9a.o
        30          0          0          0          0          0   handlers.o
        36          8          0          0          0         68   init.o
         0          0          0          0          0          0   iusefp.o
        98          0          0          0          0         84   ldiv.o
        30          0          0          0          0         68   llshl.o
        36          0          0          0          0         68   llsshr.o
        32          0          0          0          0         68   llushr.o
        36          0          0          0          0         68   memcpya.o
        36         10          0          4          0        136   rand.o
        98          0          0          0          0         92   uldiv.o
       334          0          0          0          0        148   dadd.o
       186          0          0          0          0        176   depilogue.o
        50          0          0          0          0         76   dfixui.o
        26          0          0          0          0         76   dfltui.o
       228          0          0          0          0         96   dmul.o

    ----------------------------------------------------------------------
      1286         34          0          4          0       1224   Library Totals
        10          8          0          0          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

       452         26          0          4          0        652   mc_w.l
       824          0          0          0          0        572   mf_w.l

    ----------------------------------------------------------------------
      1286         34          0          4          0       1224   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     16882         98       1334         12      14100      78939   Grand Totals
     16882         98       1334         12      14100      78939   ELF Image Totals
     16882         98       1334         12          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                18216 (  17.79kB)
    Total RW  Size (RW Data + ZI Data)             14112 (  13.78kB)
    Total ROM Size (Code + RO Data + RW Data)      18228 (  17.80kB)

==============================================================================

